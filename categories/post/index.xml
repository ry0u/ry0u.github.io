<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Post on ry0u_ydのblog</title>
    <link>http://ry0u.github.io/categories/post/index.xml</link>
    <description>Recent content in Post on ry0u_ydのblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <atom:link href="http://ry0u.github.io/categories/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Vivaldi &#43; cVimに乗り換えた</title>
      <link>http://ry0u.github.io/post/2017-12-01-Vivaldi-cVim/</link>
      <pubDate>Fri, 01 Dec 2017 16:07:04 +0900</pubDate>
      
      <guid>http://ry0u.github.io/post/2017-12-01-Vivaldi-cVim/</guid>
      <description>

&lt;h1 id=&#34;以前の環境&#34;&gt;以前の環境&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;Firefox&lt;/code&gt; + &lt;code&gt;Vimperator&lt;/code&gt;をずっと愛用していた．自分が欲しいと思った機能が実現できていた．Firefoxのupdate毎に動かない関数が出てきてはいたが，それを応急処置で治していた(大概，errorとversoinで検索すれば同じ症状の人と解決策が見つかった)．&lt;/p&gt;

&lt;p&gt;しかし，Firefox Quantum (v57)にupdateしてからWeb Extentionsベースの拡張機能以外が動かなくなり，当然Vimperatorも死んだ．開発陣も対応をしているようだが，こればかりはすぐに解決するものではないと考えて，新しい環境に移行した．&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;vivaldi-cvim&#34;&gt;Vivaldi + cVim&lt;/h1&gt;

&lt;p&gt;この環境を選択した理由は以下の通りである．&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;以前からWebパネルが非常に便利で&lt;code&gt;Vivaldi&lt;/code&gt;も使用していた．&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cVim&lt;/code&gt;に似たような拡張機能の中でも一番拡張性が高く，javascriptが実行できる．&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Vimperator&lt;/code&gt;が&lt;code&gt;.vimperatorrc&lt;/code&gt;で設定をテキストベースで管理できたのと同様に，&lt;code&gt;cVim&lt;/code&gt;は&lt;code&gt;.cvimrc&lt;/code&gt;で管理できる事も魅力的だった．&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ローカルファイルから設定を読み込む時に，&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cvim error: &amp;quot;file:///yourpath/.cvimrc&amp;quot; could not be opened for parsing           command.js:719 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;が発生し，これを解決するのに的外れな事をしていた．同じ事が起こった人は勿論いて(&lt;a href=&#34;https://github.com/1995eaton/chromium-vim/issues/312&#34;&gt;here&lt;/a&gt;)，Chromeでいう&lt;code&gt;--allow-file-access-from-files&lt;/code&gt;のようなオプションをつけるのは，Vivaldiではどうするのかを調べていた．&lt;/p&gt;

&lt;p&gt;解決策は非常に簡単で，cVim settingsやVivaldiのオプションをいじるのではなく，&lt;code&gt;vivaldi://extensions&lt;/code&gt;からOnにするだけであった．&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ry0u.github.io/images/cvim.png&#34; alt=&#34;This is an image&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;設定ファイルはgistからも読み込める(URLを入れるだけ)&lt;/li&gt;
&lt;li&gt;簡単に欲しい機能を書いて，取り敢えず満足する形になった&lt;/li&gt;
&lt;li&gt;&lt;code&gt;completionengines&lt;/code&gt;が非常に感じる (以前の環境ではこういう設定はしていなかった)&lt;/li&gt;
&lt;li&gt;でもやはり&lt;code&gt;Vimperator&lt;/code&gt;の豊富なpluginが羨ましい&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;set noautofocus
set nosmoothscroll
set nativelinkorder
set showtabindices
set completeonopen

let locale = &amp;quot;jp&amp;quot;
let mapleader = &amp;quot;,&amp;quot;
let completionengines = [&amp;quot;google&amp;quot;, &amp;quot;amazonjp&amp;quot;]
let searchengine amazonjp = &amp;quot;https://www.amazon.co.jp/s/&amp;amp;field-keywords=%s&amp;quot;
let searchalias g = &amp;quot;google&amp;quot;
let searchalias a = &amp;quot;amazonjp&amp;quot;
let barposition = &amp;quot;bottom&amp;quot;
let hintcharacters = &amp;quot;asdfghjklqwertyuiop&amp;quot;

map ; :

unmap a
map &amp;lt;Leader&amp;gt;g :tabnew&amp;lt;Space&amp;gt;google&amp;lt;Space&amp;gt;
map &amp;lt;Leader&amp;gt;a :tabnew&amp;lt;Space&amp;gt;amazonjp&amp;lt;Space&amp;gt;

unmap x
unmap d
map d closeTab

unmap u
map u lastClosedTab

map &amp;lt;C-f&amp;gt; scrollPageDown
map &amp;lt;C-b&amp;gt; scrollPageUp

unmap t
map t :tabnew&amp;lt;Space&amp;gt;

map &amp;lt;Leader&amp;gt;f createTabbedHint
map &amp;lt;Leader&amp;gt;h createHoverHint
map &amp;lt;Leader&amp;gt;H createUnHoverHint
map &amp;lt;C-j&amp;gt; nextTab
map &amp;lt;C-k&amp;gt; previousTab
map &amp;lt;Leader&amp;gt;b :bookmark&amp;lt;Space&amp;gt;
map &amp;lt;Leader&amp;gt;r reloadTabUncached
map &amp;lt;Leader&amp;gt;x :restore&amp;lt;Space&amp;gt;

unmap p
unmap X
unmap b

map &amp;lt;C-g&amp;gt; :execute &amp;lt;Esc&amp;gt;
imap jj :execute &amp;lt;Esc&amp;gt;
imap &amp;lt;C-a&amp;gt; selectAll
imap &amp;lt;C-f&amp;gt; forwardWord
imap &amp;lt;C-b&amp;gt; backwardWord
imap &amp;lt;C-w&amp;gt; deleteWord
imap &amp;lt;C-d&amp;gt; deleteForwardWord
imap &amp;lt;C-h&amp;gt; deleteChar 

iunmap &amp;lt;C-p&amp;gt;
iunmap &amp;lt;C-k&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>