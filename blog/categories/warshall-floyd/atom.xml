<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: warshall_floyd | ry0u_ydのblog]]></title>
  <link href="http://ry0u.github.io/blog/categories/warshall-floyd/atom.xml" rel="self"/>
  <link href="http://ry0u.github.io/"/>
  <updated>2016-02-23T00:18:25+09:00</updated>
  <id>http://ry0u.github.io/</id>
  <author>
    <name><![CDATA[ry0u_yd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AOJ0545 Party]]></title>
    <link href="http://ry0u.github.io/blog/2016/02/10/aoj0545-party/"/>
    <updated>2016-02-10T21:45:34+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/02/10/aoj0545-party</id>
    <content type="html"><![CDATA[<p>問題文<br/>
<a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0545">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0545</a></p>

<!-- more -->


<p>この手の問題を結構前にAtCoderで探索して解き，その時のwarshall_floyd解が非常にスマートだったという覚えがあったのでそれで書いてみた．<script type="math/tex"> N \leq 500 なのでO(N ^3)でも十分間に合う</script></p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int d[1005][1005];

void warshall_floyd(int n, int m) {
    rep(i,n) rep(j,n) d[i][j] = INF;
    rep(i,n) d[i][i] = 0;

    rep(i, m) {
        int s, t;
        cin &gt;&gt; s &gt;&gt; t;

        s--;
        t--;

        d[s][t] = 1;
        d[t][s] = 1;
    }

    rep(k, n) {
        rep(i, n) {
            rep(j, n) {
                if(d[i][k] == INF || d[k][j] == INF) continue;
                d[i][j] = min(d[i][j],d[i][k] + d[k][j]);
            }
        }
    }
}

int main() {
    int n, m;
    while(cin &gt;&gt; n &gt;&gt; m) {
        if(n == 0 &amp;&amp; m == 0) break;

        warshall_floyd(n, m);

        int ans = 0;
        rep(i, n) {
            if(i == 0) continue;
            if(d[0][i] &lt;= 2) {
                ans++;
            }
        }

        cout &lt;&lt; ans &lt;&lt; endl;
    }

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
</feed>
