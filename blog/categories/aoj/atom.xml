<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: aoj | ry0u_ydのblog]]></title>
  <link href="http://ry0u.github.io/blog/categories/aoj/atom.xml" rel="self"/>
  <link href="http://ry0u.github.io/"/>
  <updated>2016-03-06T00:59:21+09:00</updated>
  <id>http://ry0u.github.io/</id>
  <author>
    <name><![CDATA[ry0u_yd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AOJ0590 Available Areas]]></title>
    <link href="http://ry0u.github.io/blog/2016/03/06/aoj0590-available-areas/"/>
    <updated>2016-03-06T00:49:16+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/03/06/aoj0590-available-areas</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-type="article" data-card-branding="0"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0590">Available Areas | Aizu Online Judge</a></h4><p>Introduction to Programming Introduction to Algorithms and Data Structures Library of Data Structures Library of Graph Algorithms Library of Computational Geometry Library of Dynamic Programming Library of Number Theory</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p><script type="math/tex; mode=display">
    2xy + x + y
</script>
で表せるか調べる．<script type="math/tex"> x </script>の値を決めた時に，  キッチンを引いた長方形が存在するかどうかを調べた．</p>

<h1>Code</h1>

<p>解説書いてる時に気付いたけど，<script type="math/tex"> yとx </script>が逆だ．</p>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;
#include &lt;cmath&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int main() {
    int n;
    cin &gt;&gt; n;

    int ans = 0;
    rep(i, n) {
        int a;
        cin &gt;&gt; a;

        bool flag = false;
        for(int y = 1; 2 * y * y + 2 * y &lt;= a; y++) {
            if((a - y) % (2 * y + 1) == 0) {
                flag = true;
            }
        }

        if(flag) ans++;
    }

    cout &lt;&lt; n - ans &lt;&lt; endl;

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ0585 Nearest Two Points]]></title>
    <link href="http://ry0u.github.io/blog/2016/03/06/aoj0585-nearest-two-points/"/>
    <updated>2016-03-06T00:21:37+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/03/06/aoj0585-nearest-two-points</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-branding="0"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0585">Nearest Two Points | Aizu Online Judge</a></h4><p>Introduction to Programming Introduction to Algorithms and Data Structures Library of Data Structures Library of Graph Algorithms Library of Computational Geometry Library of Dynamic Programming Library of Number Theory</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p>分からなかった．解法を調べた．</p>

<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-branding="0"><h4><a href="http://www.ioi-jp.org/joi/2005/2006-m1-prob_and_sol/2006-m1-t4-review.html">JOI 2006 模擬試験１ 問題４解説</a></h4><p>この問題の単純な解法は，2 点の組すべてについて距離を求めて，その最も小さい値の 2 乗を答として返す方法である．この方法では入力サイズ n の 2 乗のステップ数がかかる．n がそれ程大きくない場合，例えば n≦100 のときはこの方法でも十分であるが，n が問題の範囲内にある 10 万，100 万，1000 万，1 億となってくるとそれぞれ 10 の 10 乗，10 の 12 乗，10 の 14 乗，10 の 16 乗となり，処理に非常に時間がかかる可能性が出て来る．</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>


<p>このように最悪<script type="math/tex"> O(n ^2) </script>の枝刈りをしてみるとACした．</p>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int main() {
    int n;
    cin &gt;&gt; n;

    vector&lt;int&gt; x(n), y(n);
    vector&lt;P&gt; v(n);
    rep(i, n) {
        cin &gt;&gt; x[i] &gt;&gt; y[i];
        v[i].first = x[i];
        v[i].second = y[i];
    }

    sort(v.begin(), v.end());

    int ans = INF;
    rep(i, n) {
        REP(j, i+1, n) {
            int x = v[i].first, y = v[i].second;
            int x2 = v[j].first, y2 = v[j].second;
            int d = (x2 - x) * (x2 - x) + (y2 - y) * (y2 - y);
            if((x2 - x) * (x2 - x) &gt; ans) break;
            ans = min(ans, d);
        }
    }

    cout &lt;&lt; ans &lt;&lt; endl;

    return 0;
}
</code></pre>

<p>蟻本に分割統治で<script type="math/tex"> O(n log n) </script>の解法がのっていたので写した．</p>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

P A[500005];

bool compare_y(P a, P b) {
    return a.second &lt; b.second;
}

int closest_pair(P *a, int n) {
    if(n &lt;= 1) return INF;
    int m = n / 2;

    int x = a[m].first;
    int d = min(closest_pair(a, m), closest_pair(a + m, n - m));
    inplace_merge(a, a + m, a + n, compare_y);

    vector&lt;P&gt; b;
    rep(i, n) {
        if(abs(a[i].first - x) &gt;= d) continue;

        rep(j, b.size()) {
            int x = a[i].first - b[b.size() - 1 - j].first;
            int y = a[i].second - b[b.size() - 1 - j].second;

            if(y &gt;= d) break;
            d = min(d, x * x + y * y);
        }
        b.push_back(a[i]);
    }

    return d;
}

int main() {
    int n;
    cin &gt;&gt; n;

    rep(i, n) {
        cin &gt;&gt; A[i].first &gt;&gt; A[i].second;
    }

    cout &lt;&lt; closest_pair(A, n) &lt;&lt; endl;

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ0584 Two Number Cards]]></title>
    <link href="http://ry0u.github.io/blog/2016/03/05/aoj0584-two-number-cards/"/>
    <updated>2016-03-05T23:44:14+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/03/05/aoj0584-two-number-cards</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-type="article" data-card-branding="0"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0584">Two Number Cards | Aizu Online Judge</a></h4><p>Introduction to Programming Introduction to Algorithms and Data Structures Library of Data Structures Library of Graph Algorithms Library of Computational Geometry Library of Dynamic Programming Library of Number Theory</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p>制約で<script type="math/tex"> 3 \leq n \leq 4000 </script>なので，愚直にpriority_queueとかに突っ込むと<script type="math/tex"> n ^2 log n ^2 </script>で死ぬ．<br/>
3番目まで取っておく．<br/>
また数の連結もstringstreamを用いたらTLEした．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;
#include &lt;queue&gt;

#define rep(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define inf 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; p;

int main() {
    int n;
    cin &gt;&gt; n;

    vector&lt;int&gt; v(n);
    rep(i, n) cin &gt;&gt; v[i];

    sort(v.begin(), v.end());

    int a = inf, b = inf, c = inf, x;
    rep(i, n) {
        rep(j, n) {
            if(i == j) continue;

            int x = v[i];
            for(int k = v[j]; k &gt; 0; k /= 10) {
                x *= 10;
            }

            x += v[j];

            if(x &lt;= a) {
                c = b;
                b = a;
                a = x;
            } else if(x &lt;= b) {
                c = b;
                b = x;
            } else if(x &lt;= c) {
                c = x;
            }
        }
    }

    cout &lt;&lt; c &lt;&lt; endl;

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ0580 Fish]]></title>
    <link href="http://ry0u.github.io/blog/2016/02/23/aoj0580-fish/"/>
    <updated>2016-02-23T00:00:36+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/02/23/aoj0580-fish</id>
    <content type="html"><![CDATA[<p>問題文<br/>
<a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0580">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0580</a></p>

<!-- more -->


<p>魚の種類<script type="math/tex"> Nが最大で50 </script>なので，座標圧縮すると，3重ループがかける．<br/>
座標圧縮は<br/>
<a href="http://algoogle.hadrori.jp/algorithm/compress.html">http://algoogle.hadrori.jp/algorithm/compress.html</a><br/>
が非常に分かりやすかった（蟻本の問題みたいに前後+1，-1した場所まで取っておく置く必要なし）．</p>

<p>座圧後の<script type="math/tex"> i, j, k </script>の座圧前の体積は
<script type="math/tex; mode=display">
    (\mbox{xunzip}[i+1] - \mbox{xunzip}[i]) \cdot (\mbox{yunzip}[j+1] - \mbox{yunzip}[j]) \cdot (\mbox{zunzip}[k+1] - \mbox{zunzip}[k])
</script>
で求められる．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;
#include &lt;cmath&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair
#define EPS 1e-8
#define equals(a,b) fabs((a) - (b)) &lt; EPS

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int compress(vector&lt;int&gt;&amp; v, map&lt;int, int&gt;&amp; zip, map&lt;int, int&gt;&amp; unzip) {
    sort(v.begin(), v.end());
    v.erase(unique(v.begin(),v.end()),v.end());

    rep(i, v.size()) {
        zip[v[i]] = i;
        unzip[i] = v[i];
    }

    return v.size();
}

int d[55 * 3][55 * 3][55 * 5];

int main() {
    int n, K;
    cin &gt;&gt; n &gt;&gt; K;

    vector&lt;int&gt; x, y, z;
    vector&lt;int&gt; x1(n), y1(n), z1(n), x2(n), y2(n), z2(n);

    rep(i, n) {
        cin &gt;&gt; x1[i] &gt;&gt; y1[i] &gt;&gt; z1[i] &gt;&gt; x2[i] &gt;&gt; y2[i] &gt;&gt; z2[i];
        x.push_back(x1[i]);
        x.push_back(x2[i]);

        y.push_back(y1[i]);
        y.push_back(y2[i]);

        z.push_back(z1[i]);
        z.push_back(z2[i]);
    }

    map&lt;int, int&gt; xzip, yzip, zzip;
    map&lt;int, int&gt; xunzip, yunzip, zunzip;

    int X = compress(x, xzip, xunzip);
    int Y = compress(y, yzip, yunzip);
    int Z = compress(z, zzip, zunzip);

    memset(d, 0, sizeof(d));

    rep(i, n) {
        REP(j, xzip[x1[i]], xzip[x2[i]]) {
            REP(k, yzip[y1[i]], yzip[y2[i]]) {
                REP(l, zzip[z1[i]], zzip[z2[i]]) {
                    d[j][k][l]++;
                }
            }
        }
    }

    ll ans = 0;
    rep(i, X) {
        rep(j, Y) {
            rep(k, Z) {
                if(d[i][j][k] &gt;= K) {
                    ans += ll(xunzip[i+1] - xunzip[i]) * ll(yunzip[j+1] - yunzip[j]) * ll(zunzip[k+1] - zunzip[k]);
                }
            }
        }
    }

    cout &lt;&lt; ans &lt;&lt; endl;

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ0579 Hot days]]></title>
    <link href="http://ry0u.github.io/blog/2016/02/22/aoj0579-hot-days/"/>
    <updated>2016-02-22T22:24:12+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/02/22/aoj0579-hot-days</id>
    <content type="html"><![CDATA[<p>問題文<br/>
<a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0579">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0579</a></p>

<!-- more -->


<p><script type="math/tex; mode=display">
    dp[i][j] := i日目に服jを着た時の最大値 \
</script>
として，最大化したい値は</p>

<p><script type="math/tex; mode=display">
    |C<em>{x_1} - C</em>{x_2}| + |C<em>{x_2} - C</em>{x_3}| + \cdots +  |C<em>{x</em>{D-1}} - C_{x_D}|
</script></p>

<p>なので，<script type="math/tex"> 1日目に切れる服には0を入れておき， i-1日目からi日目に遷移する．(2 \leq i \leq D)</script><br/>
遷移可能(<script type="math/tex">i</script>日目の最高気温によって服が着れるか着れないか)な場合，<script type="math/tex">i-1</script>日目に何を着ていた場合が値が最大になるかを選ぶ．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int main() {
    int d, n;
    cin &gt;&gt; d &gt;&gt; n;

    vector&lt;int&gt; t(d);
    rep(i, d) cin &gt;&gt; t[i];

    vector&lt;int&gt; a(n), b(n), c(n);
    rep(i, n) cin &gt;&gt; a[i] &gt;&gt; b[i] &gt;&gt; c[i];

    int dp[205][205];
    rep(i, 205) rep(j, 205) dp[i][j] = -1;

    rep(i, n) {
        if(a[i] &lt;= t[0] &amp;&amp; t[0] &lt;= b[i]) dp[0][i] = 0;
    }

    REP(i, 1, d) {
        rep(j, n) {
            if(a[j] &lt;= t[i] &amp;&amp; t[i] &lt;= b[j]) {
                rep(k, n) {
                    if(dp[i-1][k] == -1) continue;
                    dp[i][j] = max(dp[i][j], dp[i-1][k] + abs(c[k] - c[j]));
                }
            }
        }
    }

    int ans = 0;
    rep(i, n) {
        ans = max(ans, dp[d-1][i]);
    }

    cout &lt;&lt; ans &lt;&lt; endl;


    return 0;
}
</code></pre>
]]></content>
  </entry>
  
</feed>
