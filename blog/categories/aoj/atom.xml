<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: aoj | ry0u_ydのblog]]></title>
  <link href="http://ry0u.github.io/blog/categories/aoj/atom.xml" rel="self"/>
  <link href="http://ry0u.github.io/"/>
  <updated>2016-02-12T02:59:49+09:00</updated>
  <id>http://ry0u.github.io/</id>
  <author>
    <name><![CDATA[ry0u_yd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AOJ0560 Planetary Exploration]]></title>
    <link href="http://ry0u.github.io/blog/2016/02/12/aoj0560-planetary-exploration/"/>
    <updated>2016-02-12T02:11:59+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/02/12/aoj0560-planetary-exploration</id>
    <content type="html"><![CDATA[<p>問題文<br/>
<a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0560">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0560</a></p>

<!-- more -->


<p>2次元imos．<script type="math/tex"> (a, b) 〜 (c, d) </script>は</p>

<ol>
<li>f[a-1][b-1]</li>
<li>f[a-1][d]</li>
<li>f[c][b-1]</li>
<li>f[c][d]</li>
</ol>


<p>1
<img src="/images/AOJ/0560-4.png">
2
<img src="/images/AOJ/0560-3.png"><br/>
3
<img src="/images/AOJ/0560-2.png">
4
<img src="/images/AOJ/0560-1.png"></p>

<p>とすると，<script type="math/tex"> f(c, d) - f(c, b-1) - f(a-1, d) + f(a-1, b-1) </script>で求めることが出来る．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int J[1005][1005], O[1005][1005], I[1005][1005];

int main() {
    int m, n, k;
    cin &gt;&gt; m &gt;&gt; n &gt;&gt; k;

    vector&lt;string&gt; v(m);
    rep(i, m) cin &gt;&gt; v[i];

    memset(J, 0, sizeof(J));
    memset(O, 0, sizeof(O));
    memset(I, 0, sizeof(I));

    rep(i, m) {
        rep(j, n) {
            if(v[i][j] == 'J') J[i][j]++;
            if(v[i][j] == 'O') O[i][j]++;
            if(v[i][j] == 'I') I[i][j]++;
        }
    }

    rep(i, m) {
        REP(j, 1, n) {
            J[i][j] += J[i][j-1];
            O[i][j] += O[i][j-1];
            I[i][j] += I[i][j-1];
        }
    }

    rep(i, n) {
        REP(j, 1, m) {
            J[j][i] += J[j-1][i];
            O[j][i] += O[j-1][i];
            I[j][i] += I[j-1][i];
        }
    }

    rep(i, k) {
        int a, b, c, d;
        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d;

        a--;
        b--;
        c--;
        d--;

        cout &lt;&lt; J[c][d] - (a-1 &gt;= 0 ? J[a-1][d] : 0) - (b-1 &gt;= 0 ? J[c][b-1] : 0) + (a-1 &gt;= 0 &amp;&amp; b -1 &gt;= 0 ? J[a-1][b-1] : 0) &lt;&lt; " ";
        cout &lt;&lt; O[c][d] - (a-1 &gt;= 0 ? O[a-1][d] : 0) - (b-1 &gt;= 0 ? O[c][b-1] : 0) + (a-1 &gt;= 0 &amp;&amp; b -1 &gt;= 0 ? O[a-1][b-1] : 0) &lt;&lt; " ";
        cout &lt;&lt; I[c][d] - (a-1 &gt;= 0 ? I[a-1][d] : 0) - (b-1 &gt;= 0 ? I[c][b-1] : 0) + (a-1 &gt;= 0 &amp;&amp; b -1 &gt;= 0 ? I[a-1][b-1] : 0) &lt;&lt; endl;
    }

    return 0;
}
</code></pre>

<p>ベースを<script type="math/tex"> (0, 0)にするとa == 0 || b == 0の時にちょっと面倒 </script>．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ0558 Cheese]]></title>
    <link href="http://ry0u.github.io/blog/2016/02/12/aoj0558-cheese/"/>
    <updated>2016-02-12T01:43:39+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/02/12/aoj0558-cheese</id>
    <content type="html"><![CDATA[<p>問題文<br/>
<a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0558">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0558</a></p>

<!-- more -->


<p>N個の工場は1種類のみ生産するので，次に行くべき場所が一意に定まる．N回幅優先で最短時間をもとめも十分間に合う．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;
#include &lt;queue&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int h, w, n;
int dx[4] = {1,0,-1,0};
int dy[4] = {0,1,0,-1};

bool can(int y,int x) {
    if(0 &lt;= y &amp;&amp; y &lt; h &amp;&amp; 0 &lt;= x &amp;&amp; x &lt; w) return true;
    return false;
}

int main() {
    cin &gt;&gt; h &gt;&gt; w &gt;&gt; n;

    vector&lt;string&gt; s(h);
    rep(i, h) cin &gt;&gt; s[i];

    int sx = -1, sy = -1;
    rep(i, h) {
        rep(j, w) {
            if(s[i][j] == 'S') {
                sy = i;
                sx = j;
            }
        }
    }

    int ans = 0, y = sy, x = sx;
    int d[1005][1005];
    bool used[1005][1005];

    rep(i, n) {
        queue&lt;P&gt; que;
        que.push(P(y, x));

        memset(used, 0, sizeof(used));
        used[y][x] = x;

        memset(d, 0, sizeof(d));
        int cnt = 0;

        while(que.size()) {
            P p = que.front();
            que.pop();

            if(s[p.first][p.second] == char('1' + i)) {
                ans += d[p.first][p.second];
                y = p.first;
                x = p.second;
                break;
            }

            rep(j, 4) {
                int ny = p.first + dy[j];
                int nx = p.second + dx[j];

                if(can(ny, nx) &amp;&amp; !used[ny][nx] &amp;&amp; s[ny][nx] != 'X') {
                    used[ny][nx] = true;
                    d[ny][nx] += d[p.first][p.second] + 1;
                    que.push(P(ny, nx));
                }
            }
        }
    }

    cout &lt;&lt; ans &lt;&lt; endl;
    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ0556 Tile]]></title>
    <link href="http://ry0u.github.io/blog/2016/02/11/aoj0556-tile/"/>
    <updated>2016-02-11T23:48:29+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/02/11/aoj0556-tile</id>
    <content type="html"><![CDATA[<p>問題文<br/>
<a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0556">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0556</a></p>

<!-- more -->


<p>対称な形をしているのでまず，左上に移動させる．次に必ず下三角か上三角のどちらかになり，それが分かれば段数で色判定ができる．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int main() {
    int n, k;
    cin &gt;&gt; n &gt;&gt; k;

    rep(i, k) {
        int a, b;
        cin &gt;&gt; a &gt;&gt; b;

        a--;
        b--;

        if(a &gt; n / 2) {
            a = n - 1 - a;
        }

        if(b &gt; n / 2) {
            b = n - 1 - b;
        }

        // cout &lt;&lt; a &lt;&lt; " " &lt;&lt; b &lt;&lt; endl;
        if(a &gt; b) {
            cout &lt;&lt; b % 3 + 1 &lt;&lt; endl;
        } else {
            cout &lt;&lt; a % 3 + 1 &lt;&lt; endl;
        }
    }

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ0551 Icicles]]></title>
    <link href="http://ry0u.github.io/blog/2016/02/10/aoj0551-icicles/"/>
    <updated>2016-02-10T22:42:10+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/02/10/aoj0551-icicles</id>
    <content type="html"><![CDATA[<p>問題文<br/>
<a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0551">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0551</a></p>

<!-- more -->


<p>i番目のつららが落ちる時間は両隣のi-1，i+1番目のつららが落ちる時間に依存し，初期の値が大きいほうからつららを落として行けば矛盾は起きないと思ったので，priority_queueでやったらACした．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;
#include &lt;queue&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int main() {
    int n, l;
    while(cin &gt;&gt; n &gt;&gt; l) {
        if(n == 0 &amp;&amp; l == 0) break;

        vector&lt;int&gt; v(n), cnt(n);
        priority_queue&lt;P, vector&lt;P&gt;, greater&lt;P&gt; &gt; que;
        rep(i, n) {
            cin &gt;&gt; v[i];
            cnt[i] = 0;
            que.push(P(v[i], i));
        }

        while(que.size()) {
            P p = que.top();
            que.pop();

            int d = l - p.first;
            int id = p.second;

            if(id == 0) cnt[id] += cnt[id+1] + d;
            else if(id == n-1) cnt[id] += cnt[id-1] + d;
            else cnt[id] += max(cnt[id-1], cnt[id+1]) + d;
        }

        int ans = 0;
        rep(i, n) {
            ans = max(ans, cnt[i]);
        }
        cout &lt;&lt; ans &lt;&lt; endl;
    }

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ0549 A Traveler]]></title>
    <link href="http://ry0u.github.io/blog/2016/02/10/aoj0549-a-traveler/"/>
    <updated>2016-02-10T22:34:52+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/02/10/aoj0549-a-traveler</id>
    <content type="html"><![CDATA[<p>問題文<br/>
<a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0549">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0549</a></p>

<!-- more -->


<p>宿場町<script type="math/tex">kから宿場町k + a_i</script>までのコストの和が求まれば良いのでBITを用いた．ブログを書いてる時に，これimosだけのほうがシンプルでlogが消えることに気付いたけど，この問題だったらどっちでもいいよね(log<sup>2</sup>とかにならないのでほぼ定数)となった．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

struct BIT {
    vector&lt;int&gt; bit;

    BIT(int n) : bit(n+1) {}

    int sum(int i) {
        int s = 0;
        while(i &gt; 0) {
            s += bit[i];
            i -= i &amp; -i;
        }
        return s;
    }

    void add(int i,int x) {
        while(i &lt;= bit.size()) {
            bit[i] += x;
            i += i &amp; -i;
        }
    }
};

int main() {
    int n, m;
    while(cin &gt;&gt; n &gt;&gt; m) {
        if(n == 0 &amp;&amp; m == 0) break;

        BIT bit(100005);
        rep(i, n-1) {
            int a;
            cin &gt;&gt; a;

            bit.add(i+1, a);
        }

        int cur = 1;
        ll ans = 0;

        rep(i, m) {
            int a;
            cin &gt;&gt; a;

            ans += abs(bit.sum(cur+a-1) - bit.sum(cur-1));
            ans %= 100000;
            cur += a;
        }

        cout &lt;&lt; ans &lt;&lt; endl;
    }

    return 0;
}
</code></pre>

<p>いくらlogだからといって変につけたりするとTLEすることがあるが何回かあったので，注意したい．</p>
]]></content>
  </entry>
  
</feed>
