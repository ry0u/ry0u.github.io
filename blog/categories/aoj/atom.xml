<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: aoj | ry0u_ydのblog]]></title>
  <link href="http://ry0u.github.io/blog/categories/aoj/atom.xml" rel="self"/>
  <link href="http://ry0u.github.io/"/>
  <updated>2016-03-06T01:49:43+09:00</updated>
  <id>http://ry0u.github.io/</id>
  <author>
    <name><![CDATA[ry0u_yd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AOJ0596 Taxis]]></title>
    <link href="http://ry0u.github.io/blog/2016/03/06/aoj0596-taxis/"/>
    <updated>2016-03-06T01:40:26+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/03/06/aoj0596-taxis</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-type="article" data-card-branding="0"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0596">Taxis | Aizu Online Judge</a></h4><p>Introduction to Programming Introduction to Algorithms and Data Structures Library of Data Structures Library of Graph Algorithms Library of Computational Geometry Library of Dynamic Programming Library of Number Theory</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p>タクシーの移動しか使わないのでタクシーの移動の場合のグラフを作り直す．まず連結している町の辺のコストを<script type="math/tex"> 1 </script>にする．<br/>
頂点<script type="math/tex"> i </script>からdijkstraして<script type="math/tex"> d[j] \leq R[i] </script>以下の場合に，<script type="math/tex"> i \to j</script>にコスト<script type="math/tex"> C[i] </script>の辺を張る．<br/>
新しいグラフを構築したらそのグラフでdijkstra．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;
#include &lt;queue&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

struct edge {
    int from,to;
    int cost;

    edge(int t,int c) : to(t),cost(c) {}
    edge(int f,int t,int c) : from(f),to(t),cost(c) {}

    bool operator&lt;(const edge &amp;e) const {
        return cost &lt; e.cost;
    }
};

vector&lt;edge&gt; G[5005];
vector&lt;int&gt; g[5005];
int C[5005], R[5005], d[5005];

void dijkstra(int s,int n) {
    priority_queue&lt;P,vector&lt;P&gt;,greater&lt;P&gt; &gt; que;
    fill(d,d+n,INF);

    d[s] = 0;
    que.push(P(0,s));

    while(que.size()) {
        P p = que.top();
        que.pop();

        int v = p.second;
        if(d[v] &lt; p.first) continue;

        rep(i,G[v].size()) {
            edge e = G[v][i];
            if(d[e.to] &gt; d[v] + e.cost) {
                d[e.to] = d[v] + e.cost;
                que.push(P(d[e.to],e.to));
            }
        }
    }
}

int main() {
    int n, m;
    cin &gt;&gt; n &gt;&gt; m;

    memset(C, 0, sizeof(C));
    memset(R, 0, sizeof(R));
    rep(i, n) cin &gt;&gt; C[i] &gt;&gt; R[i];
    rep(i, m) {
        int s, t;
        cin &gt;&gt; s &gt;&gt; t;

        s--;
        t--;

        g[s].push_back(t);
        g[t].push_back(s);
    }

    rep(i, n) {
        fill(d, d + n, INF);

        priority_queue&lt;P, vector&lt;P&gt;, greater&lt;P&gt; &gt; que;
        que.push(mp(0, i));

        d[i] = 0;

        while(que.size()) {
            P p = que.top();
            que.pop();

            int v = p.second;

            if(d[v] &lt; p.first) continue;

            rep(i, g[v].size()) {
                if(d[g[v][i]] &gt; d[v] + 1) {
                    d[g[v][i]] = d[v] + 1;
                    que.push(mp(d[v] + 1, g[v][i]));
                }
            }
        }

        rep(j, n) {
            if(i == j) continue;
            if(d[j] &lt;= R[i]) {
                G[i].push_back(edge(j, C[i]));
            }
        }
    }

    dijkstra(0, n);

    cout &lt;&lt; d[n-1] &lt;&lt; endl;

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ0595 Schedule]]></title>
    <link href="http://ry0u.github.io/blog/2016/03/06/aoj0595-schedule/"/>
    <updated>2016-03-06T01:11:01+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/03/06/aoj0595-schedule</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-type="article" data-card-branding="0"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0595">Schedule | Aizu Online Judge</a></h4><p>Introduction to Programming Introduction to Algorithms and Data Structures Library of Data Structures Library of Graph Algorithms Library of Computational Geometry Library of Dynamic Programming Library of Number Theory</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p>J君，O君，I君がいるかいないかを3ビットで持つ．
<script type="math/tex; mode=display">
    dp[i][j] := i日目に状態jの場合のスケジュール表として考えられるものの数
</script>
とする．</p>

<ul>
<li><p><script type="math/tex"> i </script>日目の鍵当番がいるか<br/>
<script type="math/tex; mode=display">
  j \ &amp; \ (1 &lt;&lt; d)
</script></p></li>
<li><p><script type="math/tex"> i-1日目に鍵を持ち帰れた人がいるか </script>
<script type="math/tex; mode=display">
  j \ &amp; \ k
</script></p></li>
</ul>


<p>この条件を満たす場合に遷移可能．<script type="math/tex"> O(n \cdot 2 ^3 \cdot 2 ^3) </script>．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;
#include &lt;bitset&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair
#define MOD 10007

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

ll dp[1005][8];

int main() {
    int n;
    cin &gt;&gt; n;

    string s;
    cin &gt;&gt; s;

    map&lt;char, int&gt; id;
    id['J'] = 2; id['O'] = 1, id['I'] = 0;

    memset(dp, 0, sizeof(dp));
    dp[0][1 &lt;&lt; 2] = 1;

    REP(i, 1, n + 1) {
        int d = id[ s[i-1] ];
        rep(j, 1 &lt;&lt; 3) {
            if(!(j &amp; (1 &lt;&lt; d))) continue;
            rep(k, 1 &lt;&lt; 3) {
                if(j &amp; k) { 
                    dp[i][j] += dp[i-1][k];
                    dp[i][j] %= MOD;
                }
            }
        }
    }

    ll ans = 0;
    rep(i, 1 &lt;&lt; 3) {
        ans += dp[n][i];
    }

    cout &lt;&lt; ans % MOD &lt;&lt; endl;


    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ0594 Super Metropolis]]></title>
    <link href="http://ry0u.github.io/blog/2016/03/06/aoj0594-super-metropolis/"/>
    <updated>2016-03-06T01:03:49+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/03/06/aoj0594-super-metropolis</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-branding="0"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0594">Super Metropolis | Aizu Online Judge</a></h4><p>Introduction to Programming Introduction to Algorithms and Data Structures Library of Data Structures Library of Graph Algorithms Library of Computational Geometry Library of Dynamic Programming Library of Number Theory</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p>右上または左下に行く場合は，斜めの移動が使えるので<script type="math/tex"> \max(dx, dy) </script>でいける．右下または左上に行く場合は<script type="math/tex"> dx + dy </script>かかる．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int main() {
    int w, h, n;
    cin &gt;&gt; w &gt;&gt; h &gt;&gt; n;

    int x, y;
    cin &gt;&gt; x &gt;&gt; y;

    int ans = 0;
    rep(i, n - 1) {
        int a, b;
        cin &gt;&gt; a &gt;&gt; b;

        if(x &lt;= a) {
            if(y &lt;= b) {
                int c = a - x, d = b - y;
                ans += max(c, d);
            } else {
                int c = a - x, d = y - b;
                ans += c + d;
            }
        } else {
            if(y &lt;= b) {
                int c = x - a, d = b - y;
                ans += c + d;
            } else {
                int c = x - a, d = y - b;
                ans += max(c, d);
            }
        }

        x = a;
        y = b;
    }

    cout &lt;&lt; ans &lt;&lt; endl;

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ0590 Available Areas]]></title>
    <link href="http://ry0u.github.io/blog/2016/03/06/aoj0590-available-areas/"/>
    <updated>2016-03-06T00:49:16+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/03/06/aoj0590-available-areas</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-type="article" data-card-branding="0"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0590">Available Areas | Aizu Online Judge</a></h4><p>Introduction to Programming Introduction to Algorithms and Data Structures Library of Data Structures Library of Graph Algorithms Library of Computational Geometry Library of Dynamic Programming Library of Number Theory</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p><script type="math/tex; mode=display">
    2xy + x + y
</script>
で表せるか調べる．<script type="math/tex"> x </script>の値を決めた時に，  キッチンを引いた長方形が存在するかどうかを調べた．</p>

<h1>Code</h1>

<p>解説書いてる時に気付いたけど，<script type="math/tex"> yとx </script>が逆だ．</p>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;
#include &lt;cmath&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int main() {
    int n;
    cin &gt;&gt; n;

    int ans = 0;
    rep(i, n) {
        int a;
        cin &gt;&gt; a;

        bool flag = false;
        for(int y = 1; 2 * y * y + 2 * y &lt;= a; y++) {
            if((a - y) % (2 * y + 1) == 0) {
                flag = true;
            }
        }

        if(flag) ans++;
    }

    cout &lt;&lt; n - ans &lt;&lt; endl;

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ0585 Nearest Two Points]]></title>
    <link href="http://ry0u.github.io/blog/2016/03/06/aoj0585-nearest-two-points/"/>
    <updated>2016-03-06T00:21:37+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/03/06/aoj0585-nearest-two-points</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-branding="0"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0585">Nearest Two Points | Aizu Online Judge</a></h4><p>Introduction to Programming Introduction to Algorithms and Data Structures Library of Data Structures Library of Graph Algorithms Library of Computational Geometry Library of Dynamic Programming Library of Number Theory</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p>分からなかった．解法を調べた．</p>

<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-branding="0"><h4><a href="http://www.ioi-jp.org/joi/2005/2006-m1-prob_and_sol/2006-m1-t4-review.html">JOI 2006 模擬試験１ 問題４解説</a></h4><p>この問題の単純な解法は，2 点の組すべてについて距離を求めて，その最も小さい値の 2 乗を答として返す方法である．この方法では入力サイズ n の 2 乗のステップ数がかかる．n がそれ程大きくない場合，例えば n≦100 のときはこの方法でも十分であるが，n が問題の範囲内にある 10 万，100 万，1000 万，1 億となってくるとそれぞれ 10 の 10 乗，10 の 12 乗，10 の 14 乗，10 の 16 乗となり，処理に非常に時間がかかる可能性が出て来る．</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>


<p>このように最悪<script type="math/tex"> O(n ^2) </script>の枝刈りをしてみるとACした．</p>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int main() {
    int n;
    cin &gt;&gt; n;

    vector&lt;int&gt; x(n), y(n);
    vector&lt;P&gt; v(n);
    rep(i, n) {
        cin &gt;&gt; x[i] &gt;&gt; y[i];
        v[i].first = x[i];
        v[i].second = y[i];
    }

    sort(v.begin(), v.end());

    int ans = INF;
    rep(i, n) {
        REP(j, i+1, n) {
            int x = v[i].first, y = v[i].second;
            int x2 = v[j].first, y2 = v[j].second;
            int d = (x2 - x) * (x2 - x) + (y2 - y) * (y2 - y);
            if((x2 - x) * (x2 - x) &gt; ans) break;
            ans = min(ans, d);
        }
    }

    cout &lt;&lt; ans &lt;&lt; endl;

    return 0;
}
</code></pre>

<p>蟻本に分割統治で<script type="math/tex"> O(n log n) </script>の解法がのっていたので写した．</p>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

P A[500005];

bool compare_y(P a, P b) {
    return a.second &lt; b.second;
}

int closest_pair(P *a, int n) {
    if(n &lt;= 1) return INF;
    int m = n / 2;

    int x = a[m].first;
    int d = min(closest_pair(a, m), closest_pair(a + m, n - m));
    inplace_merge(a, a + m, a + n, compare_y);

    vector&lt;P&gt; b;
    rep(i, n) {
        if(abs(a[i].first - x) &gt;= d) continue;

        rep(j, b.size()) {
            int x = a[i].first - b[b.size() - 1 - j].first;
            int y = a[i].second - b[b.size() - 1 - j].second;

            if(y &gt;= d) break;
            d = min(d, x * x + y * y);
        }
        b.push_back(a[i]);
    }

    return d;
}

int main() {
    int n;
    cin &gt;&gt; n;

    rep(i, n) {
        cin &gt;&gt; A[i].first &gt;&gt; A[i].second;
    }

    cout &lt;&lt; closest_pair(A, n) &lt;&lt; endl;

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
</feed>
