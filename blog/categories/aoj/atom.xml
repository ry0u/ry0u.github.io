<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: aoj | ry0u_ydのblog]]></title>
  <link href="http://ry0u.github.io/blog/categories/aoj/atom.xml" rel="self"/>
  <link href="http://ry0u.github.io/"/>
  <updated>2016-02-15T23:35:34+09:00</updated>
  <id>http://ry0u.github.io/</id>
  <author>
    <name><![CDATA[ry0u_yd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AOJ0568 Pasta]]></title>
    <link href="http://ry0u.github.io/blog/2016/02/15/aoj0568-pasta/"/>
    <updated>2016-02-15T21:23:15+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/02/15/aoj0568-pasta</id>
    <content type="html"><![CDATA[<p>問題文<br/>
<a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0568">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0568</a></p>

<!-- more -->


<p>3日以上連続してはいけないので，連続して選んだ状態を<script type="math/tex"> 1 </script>，選んでいない状態を<script type="math/tex"> 0 </script>と分ける．
<script type="math/tex; mode=display">
\begin{eqnarray}
    dp[i][j][0] &amp;:=&amp; i日目にj番目のソースを選び，全日に同じソースを選んでいない場合の通り\
    dp[i][j][1] &amp;:=&amp; i日目にj番目のソースを選び，前日に同じソースを選んだ場合の通り
\end{eqnarray}
</script></p>

<blockquote><p>ある<script type="math/tex"> i </script>日目に<script type="math/tex"> j </script>番目を連続して選ぶ時に，同じ種類の<script type="math/tex"> j </script>番目を選ぶということだが，<script type="math/tex"> i-1 </script>日目が連続して選んだ場合から遷移すると3連続となってしまうので，<script type="math/tex"> i-1 </script>日目が非連続の場合からのみ遷移する．</p></blockquote>

<p>ソース1を<script type="math/tex"> j </script>番目に連続して選ぶ場合，<script type="math/tex"> j-1 </script>番目のソースを連続して選んでいない場合，つまり<script type="math/tex"> dp[i-1][1][0] </script>から遷移
<img src="/images/AOJ/0568-1.png"></p>

<p>ソース2を<script type="math/tex"> j </script>番目に連続して選ぶ場合，<script type="math/tex"> j-1 </script>番目のソースを連続して選んでいない場合，つまり<script type="math/tex"> dp[i-1][2][0] </script>から遷移
<img src="/images/AOJ/0568-2.png"></p>

<p>ソース3を<script type="math/tex"> j </script>番目に連続して選ぶ場合，<script type="math/tex"> j-1 </script>番目のソースを連続して選んでいない場合，つまり<script type="math/tex"> dp[i-1][3][0] </script>から遷移
<img src="/images/AOJ/0568-3.png"></p>

<blockquote><p>ある<script type="math/tex"> i </script>日目に<script type="math/tex"> j </script>番目を連続して選ばない時に，連続して選ばないということは同じ種類を選ばないということなので，<script type="math/tex"> i </script>日目の他の2種類の連続，非連続の場合から遷移する</p></blockquote>

<p>ソース1を<script type="math/tex"> j </script>番目に連続して選ばない場合，ソース1以外の場合，<br/>
つまり<script type="math/tex">dp[i-1][2][0] </script>，<script type="math/tex">dp[i-1][2][1] </script>，<script type="math/tex">dp[i-1][3][0] </script>，<script type="math/tex">dp[i-1][3][1] </script>から遷移<br/>
<img src="/images/AOJ/0568-4.png"></p>

<p>ソース2を<script type="math/tex"> j </script>番目に連続して選ばない場合，ソース2以外の場合，<br/>
つまり<script type="math/tex">dp[i-1][1][0] </script>，<script type="math/tex">dp[i-1][1][1] </script>，<script type="math/tex">dp[i-1][3][0] </script>，<script type="math/tex">dp[i-1][3][1] </script>から遷移<br/>
<img src="/images/AOJ/0568-5.png"></p>

<p>ソース3を<script type="math/tex"> j </script>番目に連続して選ばない場合，ソース3以外の場合，<br/>
つまり<script type="math/tex">dp[i-1][1][0] </script>，<script type="math/tex">dp[i-1][1][1] </script>，<script type="math/tex">dp[i-1][2][0] </script>，<script type="math/tex">dp[i-1][2][1] </script>から遷移<br/>
<img src="/images/AOJ/0568-6.png"></p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair
#define MOD 10000

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int dp[105][5][5], d[105];
bool used[105];

int main() {
    int n, k;
    cin &gt;&gt; n &gt;&gt; k;

    memset(used, 0, sizeof(used));
    memset(d, 0, sizeof(d));

    rep(i, k) {
        int a, b;
        cin &gt;&gt; a &gt;&gt; b;

        used[a] = true;
        d[a] = b;
    }

    memset(dp, 0, sizeof(dp));

    if(used[1]) {
        REP(j, 1, 4) {
            if(d[1] == j) dp[1][j][0] = 1;
        }
    } else {
        REP(j, 1, 4) {
            dp[1][j][0] = 1;
        }
    }

    REP(i, 2, n + 1) {
        if(used[i]) {
            if(d[i] == 1) {
                dp[i][1][1] = dp[i-1][1][0];
                dp[i][1][0] = (dp[i-1][2][0] + dp[i-1][2][1]) + (dp[i-1][3][0] + dp[i-1][3][1]);
                dp[i][1][1] %= MOD;
                dp[i][1][0] %= MOD;
            } else if(d[i] == 2) {
                dp[i][2][1] = dp[i-1][2][0];
                dp[i][2][0] = (dp[i-1][1][0] + dp[i-1][1][1]) + (dp[i-1][3][0] + dp[i-1][3][1]);
                dp[i][2][1] %= MOD;
                dp[i][2][0] %= MOD;
            } else {
                dp[i][3][1] = dp[i-1][3][0];
                dp[i][3][0] = (dp[i-1][1][0] + dp[i-1][1][1]) + (dp[i-1][2][0] + dp[i-1][2][1]);
                dp[i][3][1] %= MOD;
                dp[i][3][0] %= MOD;
            }
        } else {
            dp[i][1][1] = dp[i-1][1][0];
            dp[i][1][0] = (dp[i-1][2][0] + dp[i-1][2][1]) + (dp[i-1][3][0] + dp[i-1][3][1]);
            dp[i][2][1] = dp[i-1][2][0];
            dp[i][2][0] = (dp[i-1][1][0] + dp[i-1][1][1]) + (dp[i-1][3][0] + dp[i-1][3][1]);
            dp[i][3][1] = dp[i-1][3][0];
            dp[i][3][0] = (dp[i-1][1][0] + dp[i-1][1][1]) + (dp[i-1][2][0] + dp[i-1][2][1]);

            dp[i][1][1] %= MOD;
            dp[i][1][0] %= MOD;
            dp[i][2][1] %= MOD;
            dp[i][2][0] %= MOD;
            dp[i][3][1] %= MOD;
            dp[i][3][0] %= MOD;
        }
    }


    // rep(i, n + 1) {
    //  REP(j, 1, 4) {
    //      cout &lt;&lt; "(" &lt;&lt; dp[i][j][0] &lt;&lt; "," &lt;&lt; dp[i][j][1] &lt;&lt; ") ";
    //  }
    //  cout &lt;&lt; endl;
    // }

    int sum = 0;
    REP(j, 1, 4) {
        rep(k, 2) {
            sum += dp[n][j][k];
            sum %= MOD;
        }
    }

    cout &lt;&lt; sum &lt;&lt; endl;

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ0561 Books]]></title>
    <link href="http://ry0u.github.io/blog/2016/02/12/aoj0561-books/"/>
    <updated>2016-02-12T03:04:14+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/02/12/aoj0561-books</id>
    <content type="html"><![CDATA[<p>問題文<br/>
<a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0561">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0561</a></p>

<!-- more -->


<p>割とすぐにDPだろうと思ったけど，どう遷移していいか分からない分からないとずっと悩んでいた．試しに値段，(ジャンルの個数，値段)の貪欲をして<strong>WA</strong>を連発した</p>

<hr />

<p><script type="math/tex; mode=display">
\begin{eqnarray}
    d[i][j] &amp;:=&amp; i番目のジャンルの本をj冊選んだ時のコスト \
    dp[i][j] &amp;:=&amp; i番目以降のジャンルからj冊以下の時の最大コスト
\end{eqnarray}
</script></p>

<p>とした．5冊まで同じジャンルを売った時にプラスされる値段を見ると
<script type="math/tex; mode=display">
\begin{eqnarray}
    1冊 &amp;\to&amp; 0 \
    2冊 &amp;\to&amp; 1 + 1  = 2\
    3冊 &amp;\to&amp; 2 + 2 + 2 = 6 \
    4冊 &amp;\to&amp; 3 + 3 + 3 + 3 = 12\
    5冊 &amp;\to&amp; 4 + 4 + 4 + 4 + 4 = 20
\end{eqnarray}
</script></p>

<p>となるので同じジャンルを売った時にプラスされる値段は，冊数を<script type="math/tex">i</script>とすると，<script type="math/tex">i-1</script>増えるのがされるのが<script type="math/tex">1</script>個，<script type="math/tex">1</script>増えるのが<script type="math/tex">i-1</script>個あるので<script type="math/tex">(i-1)*2</script>となる．<br/>
また<script type="math/tex"> j </script>冊選んだ時のコストは大きい順に取ればそれが最大となるので事前にソートしておくことで<script type="math/tex"> d </script>が求まる．<br/>
これが求まると，冊数を重さと見ると，<script type="math/tex">K</script>冊を超えないナップサックになる．</p>

<p>青を遷移先とする．普通のナップサック?(蟻本p.52)はその品物を使わない遷移と使う遷移の2種類がある<br/>
<img src="/images/AOJ/0561-1.png"></p>

<p>今回の場合は，そのジャンルの本数文，遷移があるので下図のような状況になる．<br/>
<img src="/images/AOJ/0561-2.png"></p>

<p>この遷移のmaxを取れば<script type="math/tex"> dp[i][j]が求まるので最終的に dp[ジャンル数][K冊]</script>が答えとなった．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

ll d[15][2005], dp[15][2005];

int main() {
    int n, K;
    cin &gt;&gt; n &gt;&gt; K;

    vector&lt;int&gt; id, v[2005];

    rep(i, n) {
        int a, b;
        cin &gt;&gt; a &gt;&gt; b;

        id.push_back(b-1);
        v[b-1].push_back(a);
    }

    sort(id.begin(), id.end());
    id.erase(unique(id.begin(),id.end()),id.end());

    rep(i, id.size()) {
        int j = id[i];
        sort(v[j].begin(), v[j].end(), greater&lt;int&gt;() );
    }

    memset(d, 0, sizeof(d));

    rep(i, id.size()) {
        int j = id[i];

        REP(k, 1, v[j].size()+1) {
            d[j][k] += d[j][k-1] + v[j][k-1] + (k-1) * 2;
        }
    }

    memset(dp, 0, sizeof(dp));

    rep(i, id.size()) {
        rep(j, K + 1) {
            ll res = dp[i][j];
            rep(k, v[id[i]].size() + 1) {
                if(j &gt;= k) {
                    res = max(res, dp[i][j - k] + d[id[i]][k]);
                }
            }

            dp[i+1][j] = res;
        }
    }

    cout &lt;&lt; dp[ id.size()][K] &lt;&lt; endl;

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ0560 Planetary Exploration]]></title>
    <link href="http://ry0u.github.io/blog/2016/02/12/aoj0560-planetary-exploration/"/>
    <updated>2016-02-12T02:11:59+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/02/12/aoj0560-planetary-exploration</id>
    <content type="html"><![CDATA[<p>問題文<br/>
<a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0560">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0560</a></p>

<!-- more -->


<p>2次元imos．<script type="math/tex"> (a, b) 〜 (c, d) </script>は</p>

<ol>
<li>f[a-1][b-1]</li>
<li>f[a-1][d]</li>
<li>f[c][b-1]</li>
<li>f[c][d]</li>
</ol>


<p>1
<img src="/images/AOJ/0560-4.png">
2
<img src="/images/AOJ/0560-3.png"><br/>
3
<img src="/images/AOJ/0560-2.png">
4
<img src="/images/AOJ/0560-1.png"></p>

<p>とすると，<script type="math/tex"> f(c, d) - f(c, b-1) - f(a-1, d) + f(a-1, b-1) </script>で求めることが出来る．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int J[1005][1005], O[1005][1005], I[1005][1005];

int main() {
    int m, n, k;
    cin &gt;&gt; m &gt;&gt; n &gt;&gt; k;

    vector&lt;string&gt; v(m);
    rep(i, m) cin &gt;&gt; v[i];

    memset(J, 0, sizeof(J));
    memset(O, 0, sizeof(O));
    memset(I, 0, sizeof(I));

    rep(i, m) {
        rep(j, n) {
            if(v[i][j] == 'J') J[i][j]++;
            if(v[i][j] == 'O') O[i][j]++;
            if(v[i][j] == 'I') I[i][j]++;
        }
    }

    rep(i, m) {
        REP(j, 1, n) {
            J[i][j] += J[i][j-1];
            O[i][j] += O[i][j-1];
            I[i][j] += I[i][j-1];
        }
    }

    rep(i, n) {
        REP(j, 1, m) {
            J[j][i] += J[j-1][i];
            O[j][i] += O[j-1][i];
            I[j][i] += I[j-1][i];
        }
    }

    rep(i, k) {
        int a, b, c, d;
        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d;

        a--;
        b--;
        c--;
        d--;

        cout &lt;&lt; J[c][d] - (a-1 &gt;= 0 ? J[a-1][d] : 0) - (b-1 &gt;= 0 ? J[c][b-1] : 0) + (a-1 &gt;= 0 &amp;&amp; b -1 &gt;= 0 ? J[a-1][b-1] : 0) &lt;&lt; " ";
        cout &lt;&lt; O[c][d] - (a-1 &gt;= 0 ? O[a-1][d] : 0) - (b-1 &gt;= 0 ? O[c][b-1] : 0) + (a-1 &gt;= 0 &amp;&amp; b -1 &gt;= 0 ? O[a-1][b-1] : 0) &lt;&lt; " ";
        cout &lt;&lt; I[c][d] - (a-1 &gt;= 0 ? I[a-1][d] : 0) - (b-1 &gt;= 0 ? I[c][b-1] : 0) + (a-1 &gt;= 0 &amp;&amp; b -1 &gt;= 0 ? I[a-1][b-1] : 0) &lt;&lt; endl;
    }

    return 0;
}
</code></pre>

<p>ベースを<script type="math/tex"> (0, 0)にするとa == 0 || b == 0の時にちょっと面倒 </script>．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ0558 Cheese]]></title>
    <link href="http://ry0u.github.io/blog/2016/02/12/aoj0558-cheese/"/>
    <updated>2016-02-12T01:43:39+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/02/12/aoj0558-cheese</id>
    <content type="html"><![CDATA[<p>問題文<br/>
<a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0558">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0558</a></p>

<!-- more -->


<p>N個の工場は1種類のみ生産するので，次に行くべき場所が一意に定まる．N回幅優先で最短時間をもとめも十分間に合う．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;
#include &lt;queue&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int h, w, n;
int dx[4] = {1,0,-1,0};
int dy[4] = {0,1,0,-1};

bool can(int y,int x) {
    if(0 &lt;= y &amp;&amp; y &lt; h &amp;&amp; 0 &lt;= x &amp;&amp; x &lt; w) return true;
    return false;
}

int main() {
    cin &gt;&gt; h &gt;&gt; w &gt;&gt; n;

    vector&lt;string&gt; s(h);
    rep(i, h) cin &gt;&gt; s[i];

    int sx = -1, sy = -1;
    rep(i, h) {
        rep(j, w) {
            if(s[i][j] == 'S') {
                sy = i;
                sx = j;
            }
        }
    }

    int ans = 0, y = sy, x = sx;
    int d[1005][1005];
    bool used[1005][1005];

    rep(i, n) {
        queue&lt;P&gt; que;
        que.push(P(y, x));

        memset(used, 0, sizeof(used));
        used[y][x] = x;

        memset(d, 0, sizeof(d));
        int cnt = 0;

        while(que.size()) {
            P p = que.front();
            que.pop();

            if(s[p.first][p.second] == char('1' + i)) {
                ans += d[p.first][p.second];
                y = p.first;
                x = p.second;
                break;
            }

            rep(j, 4) {
                int ny = p.first + dy[j];
                int nx = p.second + dx[j];

                if(can(ny, nx) &amp;&amp; !used[ny][nx] &amp;&amp; s[ny][nx] != 'X') {
                    used[ny][nx] = true;
                    d[ny][nx] += d[p.first][p.second] + 1;
                    que.push(P(ny, nx));
                }
            }
        }
    }

    cout &lt;&lt; ans &lt;&lt; endl;
    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ0556 Tile]]></title>
    <link href="http://ry0u.github.io/blog/2016/02/11/aoj0556-tile/"/>
    <updated>2016-02-11T23:48:29+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/02/11/aoj0556-tile</id>
    <content type="html"><![CDATA[<p>問題文<br/>
<a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0556">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0556</a></p>

<!-- more -->


<p>対称な形をしているのでまず，左上に移動させる．次に必ず下三角か上三角のどちらかになり，それが分かれば段数で色判定ができる．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int main() {
    int n, k;
    cin &gt;&gt; n &gt;&gt; k;

    rep(i, k) {
        int a, b;
        cin &gt;&gt; a &gt;&gt; b;

        a--;
        b--;

        if(a &gt; n / 2) {
            a = n - 1 - a;
        }

        if(b &gt; n / 2) {
            b = n - 1 - b;
        }

        // cout &lt;&lt; a &lt;&lt; " " &lt;&lt; b &lt;&lt; endl;
        if(a &gt; b) {
            cout &lt;&lt; b % 3 + 1 &lt;&lt; endl;
        } else {
            cout &lt;&lt; a % 3 + 1 &lt;&lt; endl;
        }
    }

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
</feed>
