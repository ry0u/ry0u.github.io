<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ダブリング | ry0u_ydのblog]]></title>
  <link href="http://ry0u.github.io/blog/categories/daburingu/atom.xml" rel="self"/>
  <link href="http://ry0u.github.io/"/>
  <updated>2016-06-09T14:11:03+09:00</updated>
  <id>http://ry0u.github.io/</id>
  <author>
    <name><![CDATA[ry0u_yd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ABC013D 阿弥陀]]></title>
    <link href="http://ry0u.github.io/blog/2016/04/03/abc013d-a-mi-tuo/"/>
    <updated>2016-04-03T17:49:54+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/04/03/abc013d-a-mi-tuo</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-branding="0" data-card-type="article"><h4><a href="http://abc013.contest.atcoder.jp/tasks/abc013_4">D: 阿弥陀 - AtCoder Beginner Contest 013 | AtCoder</a></h4><p>(null)</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p>まず一回アミダをシュミレーションする．すると，ゴールする場所 <script type="math/tex"> iをj </script>に変える関数が作れる．これを遷移行列にして行列類乗だ！と思ったが， <script type="math/tex"> N \leq 10 ^5 </script>で <script type="math/tex"> D </script>は <script type="math/tex"> logD </script>に落ちるが結果<script type="math/tex"> N ^3 logD </script>となってしまい意味が無い．<br/>
そもそも行列で持つ必要がない．ダブリングで <script type="math/tex"> D </script>を <script type="math/tex"> logD </script>に落として， <script type="math/tex"> O(N logN logD) </script>．<br/>
resをmapで作ってしまい <script type="math/tex"> logN </script>が余計にかかる．変に <script type="math/tex"> log </script>をつけて落ちることがあるので気をつけたい．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int main() {
    int n, m, d;
    cin &gt;&gt; n &gt;&gt; m &gt;&gt; d;

    vector&lt;int&gt; a(m);
    rep(i, m) cin &gt;&gt; a[i];

    vector&lt;int&gt; v(n);
    rep(i, n) v[i] = i;

    rep(i, m) {
        swap(v[a[i]-1], v[a[i]]);
    }

    map&lt;int, int&gt; res;
    rep(i, n) {
        res[v[i]] = i;
    }

    vector&lt;int&gt; next(n), cur(n);
    rep(i, n) cur[i] = i;
    while(d) {
        if(d &amp; 1) {
            rep(i, n) next[i] = res[cur[i]];
            rep(i, n) cur[i] = next[i];
        }

        rep(i, n) next[i] = res[res[i]];
        rep(i, n) res[i] = next[i];

        d /= 2;
    }

    rep(i, n) {
        cout &lt;&lt; cur[i] + 1 &lt;&lt; endl;
    }

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
</feed>
