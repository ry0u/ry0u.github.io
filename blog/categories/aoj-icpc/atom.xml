<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: aoj-icpc | ry0u_ydのblog]]></title>
  <link href="http://ry0u.github.io/blog/categories/aoj-icpc/atom.xml" rel="self"/>
  <link href="http://ry0u.github.io/"/>
  <updated>2016-03-22T17:13:19+09:00</updated>
  <id>http://ry0u.github.io/</id>
  <author>
    <name><![CDATA[ry0u_yd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AOJ1237 Shredding Company]]></title>
    <link href="http://ry0u.github.io/blog/2016/03/22/aoj1237-shredding-company/"/>
    <updated>2016-03-22T17:04:43+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/03/22/aoj1237-shredding-company</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-type="article" data-card-branding="0"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1237">Shredding Company</a></h4><p>You have just been put in charge of developing a new shredder for the Shredding Company. Although a ``normal'' shredder would just shred sheets of paper into little pieces so that the contents would become unreadable, this new shredder needs to have the following unusual basic characteristics.</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more-->


<p></p>

<p>作れる数を全列挙して， <script type="math/tex"> n </script>以下の最大の数を出力する．構成する数も出力するので，dfsの引数ににvectorを持たせてみた．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int stoa(string s) {
    int ret = 0, t = 1;
    for(int i = s.size()-1; i &gt;= 0; i--) {
        ret += (s[i] - '0') * t;
        t *= 10;
    }
    return ret;
}

int n;
string s;
int vmin = INF, vmax = 0, ans = 0, cnt = 0;
vector&lt;int&gt; res;

void dfs(int i, int sum, vector&lt;int&gt; v) {
    if(i == s.size()) {
        vmin = min(vmin, sum);
        vmax = max(vmax, sum);

        if(sum &lt;= n) {
            if(ans &lt; sum) {
                ans = sum;
                cnt = 1;
                res.clear();
                rep(i, v.size()) res.push_back(v[i]);
            } else if(ans == sum) {
                cnt++;
            }
        }
        return;
    }

    REP(j, 1, s.size() + 1) {
        if(i + j &lt;= s.size() ) {
            vector&lt;int&gt; t(v.begin(), v.end());
            t.push_back(stoa(s.substr(i, j)));
            dfs(i + j, sum + stoa(s.substr(i, j)), t);
        } else return;
    }
}

int main() {
    while(cin &gt;&gt; n &gt;&gt; s) {
        if(n == 0 &amp;&amp; s == "0") break;

        vmin = INF, vmax = 0, ans = 0, cnt = 0;
        res.clear();

        vector&lt;int&gt; v;
        dfs(0, 0, v);

        if(vmin &gt; n) {
            cout &lt;&lt; "error" &lt;&lt; endl;
        } else if(cnt &gt;= 2) {
            cout &lt;&lt; "rejected" &lt;&lt; endl; 
        } else {
            cout &lt;&lt; ans;
            rep(i, res.size()) {
                cout &lt;&lt; " " &lt;&lt; res[i];
            }
            cout &lt;&lt; endl;
        }
    }
    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ2340 Carpenter's Language]]></title>
    <link href="http://ry0u.github.io/blog/2016/03/22/aoj2340-carpenters-language/"/>
    <updated>2016-03-22T16:17:27+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/03/22/aoj2340-carpenters-language</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-type="article" data-card-branding="0"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2340">Carpenters' Language</a></h4><p>International Carpenters Professionals Company (ICPC) is a top construction company with a lot of expert carpenters. What makes ICPC a top company is their original language. The syntax of the language is simply given in CFG as follows: S -> SS | (S) | )S( | ε In other words, a right parenthesis can be closed by a left parenthesis and a left parenthesis can be closed by a right parenthesis in this language.</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p>ICPC&rsquo;s languageは以下の法則で作られる．</p>

<p><script type="math/tex; mode=display">
    S \to \ \ SS \ \ | \ \ (S) \ \ | \ \ )S( \ \ | \ \ \varepsilon  \
</script></p>

<p>どんな<script type="math/tex"> (, ) </script>で構成される文字列も <script type="math/tex"> (と) </script>の数が合っていれば構成出来るので， <script type="math/tex"> (を+ </script>， <script type="math/tex"> )を- </script>とし合計が <script type="math/tex"> 0 </script>になる場合にYES，そうでない場合にNOを出力した．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int main() {
    int n;
    cin &gt;&gt; n;

    ll sum = 0;
    rep(i, n) {
        int a, b;
        char c;

        cin &gt;&gt; a &gt;&gt; c &gt;&gt; b;

        if(c == '(') sum += b;
        else sum -= b;

        if(sum == 0) cout &lt;&lt; "Yes" &lt;&lt; endl;
        else cout &lt;&lt; "No" &lt;&lt; endl;
    }

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ2583 JAG-channel]]></title>
    <link href="http://ry0u.github.io/blog/2016/03/21/aoj2583-jag-channel/"/>
    <updated>2016-03-21T23:32:18+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/03/21/aoj2583-jag-channel</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-type="article" data-card-branding="0"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2583">JAG-channel | Aizu Online Judge</a></h4><p>Introduction to Programming Introduction to Algorithms and Data Structures Library of Data Structures Library of Graph Algorithms Library of Computational Geometry Library of Dynamic Programming Library of Number Theory</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p>左の点を <script type="math/tex"> + </script>に変えて，他を空白に変える． <script type="math/tex"> +</script>に変えた場所の上を見ていき，空白ならば <script type="math/tex"> | </script>に変える．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int n;
vector&lt;string&gt; v;

int main() {
    while(cin &gt;&gt; n) {
        v.resize(n);
        rep(i, n) cin &gt;&gt; v[i];

        rep(i, n) {
            bool flag = true;
            for(int j = v[i].size()-1; j &gt;= 0; j--) {
                if(v[i][j] == '.') {
                    if(flag) {
                        v[i][j] = '+';
                        flag = false;
                    } else {
                        v[i][j] = ' ';
                    }
                }
            }
        }

        for(int i = n-1; i &gt;= 0; i--) {
            for(int j = v[i].size()-1; j &gt;= 0; j--) {
                if(v[i][j] == '+') {
                    int k = i;
                    while(k-1 &gt;= 0 &amp;&amp; v[k-1][j] == ' ') {
                        v[k-1][j] = '|';
                        k--;
                    }
                }
            }
        }

        rep(i, n) {
            cout &lt;&lt; v[i] &lt;&lt; endl;
        }
    }
    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ1325 Ginkgo Numbers]]></title>
    <link href="http://ry0u.github.io/blog/2016/03/20/aoj1325-ginkgo-numbers/"/>
    <updated>2016-03-20T23:11:37+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/03/20/aoj1325-ginkgo-numbers</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-type="article" data-card-branding="0"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1325">Ginkgo Numbers</a></h4><p>We will define Ginkgo numbers and multiplication on Ginkgo numbers. A Ginkgo number is a pair where m and n are integers. For example, , and are Ginkgo numbers. A Ginkgo number is called a prime if m 2+ n 2 > 1 and it has exactly eight divisors.</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p>与えられている <script type="math/tex"> 2 </script>個目の性質だけを使った． <script type="math/tex"> m ^2 + n ^2 </script>を割り切れる数が <script type="math/tex"> x ^2 + y ^2 </script>という形で表せるか，という問題になり</p>

<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-type="article" data-card-branding="0"><h4><a href="http://mathtrain.jp/twosquare">フェルマーの二平方和定理 | 高校数学の美しい物語</a></h4><p>整数論の美しい定理であるフェルマーの二平方和定理を解説します。平方剰余などの議論を用いた証明。</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>


<p>この記事通りに，素因数の<script type="math/tex"> 4k + 3 </script>型の指数が全て偶数かどうかを見て判断する． <script type="math/tex"> 1 </script>と <script type="math/tex"> m ^2 + n ^2 </script>以外に存在するか，ということで合計して<script type="math/tex"> 3 </script>つ以上あれば<script type="math/tex"> C </script>となる．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

map&lt;ll,ll&gt; prime_factor(ll n) {
    map&lt;ll,ll&gt; res;
    for(ll i=2; i*i &lt;= n; i++) {
        while(n%i == 0) {
            res[i]++;
            n /= i;
        }
    }

    if(n != 1) res[n] = 1;
    return res;
}

int main() {
    int n;
    cin &gt;&gt; n;

    rep(i, n) {
        int m, n;
        cin &gt;&gt; m &gt;&gt; n;

        int s = m * m + n * n;
        int cnt = 0;

        REP(i, 1, s + 1) {
            if(s % i == 0) {
                map&lt;ll, ll&gt; ret = prime_factor(s / i);
                map&lt;ll, ll&gt;::iterator ite;
                bool flag = true;
                for(ite = ret.begin(); ite != ret.end(); ite++) {
                    if(ite-&gt;first  % 4 != 3) continue;
                    if(ite-&gt;second % 2 == 0) continue;
                    flag = false;
                }

                if(flag) {
                    cnt++;
                }
            }
        }

        if(cnt &gt;= 3) cout &lt;&lt; "C" &lt;&lt; endl;
        else cout &lt;&lt; "P" &lt;&lt; endl;
    }

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ2232 Ennichi]]></title>
    <link href="http://ry0u.github.io/blog/2016/03/20/aoj2232-ennichi/"/>
    <updated>2016-03-20T23:05:17+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/03/20/aoj2232-ennichi</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-type="article" data-card-branding="0"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2232">Ennichi | Aizu Online Judge</a></h4><p>Introduction to Programming Introduction to Algorithms and Data Structures Library of Data Structures Library of Graph Algorithms Library of Computational Geometry Library of Dynamic Programming Library of Number Theory</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p>ぷよぷよ？みたいなやつ．横に隣り合うマスを実際に入れ替えてシュミレーションする．空きマスと交換すると，最初に落下処理をしなければならないことになかなか気付けなかった．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int h, w, n;

int sx,sy,gx,gy;
int dx[4] = {1,-1, 0, 0};
int dy[4] = {0, 0, 1,-1};
vector&lt;string&gt; s;
bool used[35][35], used2[35][35];

bool can(int y,int x) {
    if(0 &lt;= y &amp;&amp; y &lt; h &amp;&amp; 0 &lt;= x &amp;&amp; x &lt; w) return true;
    return false;
}

bool func(vector&lt;string&gt; t) {

    for(int i = h - 1; i &gt;= 0; i--) {
        for(int j = w - 1; j &gt;= 0; j--) {
            if(t[i][j] == '.') continue;

            int k = i;
            while(can(k+1, j) &amp;&amp; t[k+1][j] == '.') {
                swap(t[k][j], t[k+1][j]);
                k++;
            }
        }
    }

    while(true) {
        bool flag = false;
        memset(used, 0, sizeof(used));
        memset(used2, 0, sizeof(used2));

        for(int i = h-1; i &gt;= 0; i--) {
            for(int j = w-1; j &gt;= 0; j--) {
                if(t[i][j] == '.') continue;

                if(!used[i][j]) {
                    int len = 1;
                    int k = j+1;
                    while(can(i, k) &amp;&amp; t[i][k] == t[i][j]) {
                        len++;
                        k++;
                    }

                    k = j-1;
                    while(can(i, k) &amp;&amp; t[i][k] == t[i][j]) {
                        len++;
                        k--;
                    }

                    if(len &gt;= n) {
                        flag = true;
                        used[i][j] = true;
                        k = j + 1;
                        while(can(i, k) &amp;&amp; t[i][k] == t[i][j]) {
                            used[i][k] = true;
                            k++;
                        }

                        k = j - 1;
                        while(can(i, k) &amp;&amp; t[i][k] == t[i][j]) {
                            used[i][k] = true;
                            k--;
                        }
                    }
                }

                if(!used2[i][j]) {
                    int len = 1;
                    int k = i + 1;
                    while(can(k, j) &amp;&amp; t[k][j] == t[i][j]) {
                        len++;
                        k++;
                    }

                    k = i - 1;
                    while(can(k, j) &amp;&amp; t[k][j] == t[i][j]) {
                        len++;
                        k--;
                    }

                    if(len &gt;= n) {
                        flag = true;
                        used2[i][j] = true;
                        k = i + 1;
                        while(can(k, j) &amp;&amp; t[k][j] == t[i][j]) {
                            used2[k][j] = true;
                            k++;
                        }

                        k = i - 1;
                        while(can(k, j) &amp;&amp; t[k][j] == t[i][j]) {
                            used2[k][j];
                            k++;
                        }
                    }
                }
            }
        }

        rep(i, h) {
            rep(j, w) {
                if(used[i][j] || used2[i][j]) t[i][j] = '.';
            }
        }

        for(int i = h - 1; i &gt;= 0; i--) {
            for(int j = w - 1; j &gt;= 0; j--) {
                if(t[i][j] == '.') continue;

                int k = i;
                while(can(k+1, j) &amp;&amp; t[k+1][j] == '.') {
                    swap(t[k][j], t[k+1][j]);
                    k++;
                }
            }
        }

        if(flag) continue;
        else break;
    }

    rep(i, h) {
        rep(j, w) {
            if(t[i][j] == '.') continue;
            return false;
        }
    }
    return true;
}

int main() {
    cin &gt;&gt; h &gt;&gt; w &gt;&gt; n;

    s.resize(h);
    rep(i, h) cin &gt;&gt; s[i];

    bool flag = false;
    rep(i, h) {
        rep(j, w) {
            if(s[i][j] == '.') continue;

            if(j == 0) {
                swap(s[i][j], s[i][j+1]);
                flag |= func(s);
                swap(s[i][j], s[i][j+1]);
            } else if(j == w-1) {
                swap(s[i][j], s[i][j-1]);
                flag |= func(s);
                swap(s[i][j], s[i][j-1]);
            } else {
                swap(s[i][j], s[i][j+1]);
                flag |= func(s);
                swap(s[i][j], s[i][j+1]);
                swap(s[i][j], s[i][j-1]);
                flag |= func(s);
                swap(s[i][j], s[i][j-1]);
            }
        }
    }

    if(flag) cout &lt;&lt; "YES" &lt;&lt; endl;
    else cout &lt;&lt; "NO" &lt;&lt; endl;

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
</feed>
