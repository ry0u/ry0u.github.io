<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 実装 | ry0u_ydのblog]]></title>
  <link href="http://ry0u.github.io/blog/categories/shi-zhuang/atom.xml" rel="self"/>
  <link href="http://ry0u.github.io/"/>
  <updated>2016-03-22T22:11:56+09:00</updated>
  <id>http://ry0u.github.io/</id>
  <author>
    <name><![CDATA[ry0u_yd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AOJ2232 Ennichi]]></title>
    <link href="http://ry0u.github.io/blog/2016/03/20/aoj2232-ennichi/"/>
    <updated>2016-03-20T23:05:17+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/03/20/aoj2232-ennichi</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-type="article" data-card-branding="0"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2232">Ennichi | Aizu Online Judge</a></h4><p>Introduction to Programming Introduction to Algorithms and Data Structures Library of Data Structures Library of Graph Algorithms Library of Computational Geometry Library of Dynamic Programming Library of Number Theory</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p>ぷよぷよ？みたいなやつ．横に隣り合うマスを実際に入れ替えてシュミレーションする．空きマスと交換すると，最初に落下処理をしなければならないことになかなか気付けなかった．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int h, w, n;

int sx,sy,gx,gy;
int dx[4] = {1,-1, 0, 0};
int dy[4] = {0, 0, 1,-1};
vector&lt;string&gt; s;
bool used[35][35], used2[35][35];

bool can(int y,int x) {
    if(0 &lt;= y &amp;&amp; y &lt; h &amp;&amp; 0 &lt;= x &amp;&amp; x &lt; w) return true;
    return false;
}

bool func(vector&lt;string&gt; t) {

    for(int i = h - 1; i &gt;= 0; i--) {
        for(int j = w - 1; j &gt;= 0; j--) {
            if(t[i][j] == '.') continue;

            int k = i;
            while(can(k+1, j) &amp;&amp; t[k+1][j] == '.') {
                swap(t[k][j], t[k+1][j]);
                k++;
            }
        }
    }

    while(true) {
        bool flag = false;
        memset(used, 0, sizeof(used));
        memset(used2, 0, sizeof(used2));

        for(int i = h-1; i &gt;= 0; i--) {
            for(int j = w-1; j &gt;= 0; j--) {
                if(t[i][j] == '.') continue;

                if(!used[i][j]) {
                    int len = 1;
                    int k = j+1;
                    while(can(i, k) &amp;&amp; t[i][k] == t[i][j]) {
                        len++;
                        k++;
                    }

                    k = j-1;
                    while(can(i, k) &amp;&amp; t[i][k] == t[i][j]) {
                        len++;
                        k--;
                    }

                    if(len &gt;= n) {
                        flag = true;
                        used[i][j] = true;
                        k = j + 1;
                        while(can(i, k) &amp;&amp; t[i][k] == t[i][j]) {
                            used[i][k] = true;
                            k++;
                        }

                        k = j - 1;
                        while(can(i, k) &amp;&amp; t[i][k] == t[i][j]) {
                            used[i][k] = true;
                            k--;
                        }
                    }
                }

                if(!used2[i][j]) {
                    int len = 1;
                    int k = i + 1;
                    while(can(k, j) &amp;&amp; t[k][j] == t[i][j]) {
                        len++;
                        k++;
                    }

                    k = i - 1;
                    while(can(k, j) &amp;&amp; t[k][j] == t[i][j]) {
                        len++;
                        k--;
                    }

                    if(len &gt;= n) {
                        flag = true;
                        used2[i][j] = true;
                        k = i + 1;
                        while(can(k, j) &amp;&amp; t[k][j] == t[i][j]) {
                            used2[k][j] = true;
                            k++;
                        }

                        k = i - 1;
                        while(can(k, j) &amp;&amp; t[k][j] == t[i][j]) {
                            used2[k][j];
                            k++;
                        }
                    }
                }
            }
        }

        rep(i, h) {
            rep(j, w) {
                if(used[i][j] || used2[i][j]) t[i][j] = '.';
            }
        }

        for(int i = h - 1; i &gt;= 0; i--) {
            for(int j = w - 1; j &gt;= 0; j--) {
                if(t[i][j] == '.') continue;

                int k = i;
                while(can(k+1, j) &amp;&amp; t[k+1][j] == '.') {
                    swap(t[k][j], t[k+1][j]);
                    k++;
                }
            }
        }

        if(flag) continue;
        else break;
    }

    rep(i, h) {
        rep(j, w) {
            if(t[i][j] == '.') continue;
            return false;
        }
    }
    return true;
}

int main() {
    cin &gt;&gt; h &gt;&gt; w &gt;&gt; n;

    s.resize(h);
    rep(i, h) cin &gt;&gt; s[i];

    bool flag = false;
    rep(i, h) {
        rep(j, w) {
            if(s[i][j] == '.') continue;

            if(j == 0) {
                swap(s[i][j], s[i][j+1]);
                flag |= func(s);
                swap(s[i][j], s[i][j+1]);
            } else if(j == w-1) {
                swap(s[i][j], s[i][j-1]);
                flag |= func(s);
                swap(s[i][j], s[i][j-1]);
            } else {
                swap(s[i][j], s[i][j+1]);
                flag |= func(s);
                swap(s[i][j], s[i][j+1]);
                swap(s[i][j], s[i][j-1]);
                flag |= func(s);
                swap(s[i][j], s[i][j-1]);
            }
        }
    }

    if(flag) cout &lt;&lt; "YES" &lt;&lt; endl;
    else cout &lt;&lt; "NO" &lt;&lt; endl;

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ2243 Step Step Evolution]]></title>
    <link href="http://ry0u.github.io/blog/2016/03/20/aoj2243-step-step-evolution/"/>
    <updated>2016-03-20T22:50:10+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/03/20/aoj2243-step-step-evolution</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-type="article" data-card-branding="0"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2243">Step Step Evolution</a></h4><p>Japanese video game company has developed the music video game called Step Step Evolution. The gameplay of Step Step Evolution is very simple. Players stand on the dance platform, and step on panels on it according to a sequence of arrows shown in the front screen.</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p>左右交互に踏めなくなった回数を数える．最初に左足，右足の <script type="math/tex"> 2 </script>パターンの<script type="math/tex"> min </script>を取る． <script type="math/tex"> \rm{mod} 3</script> で場合分けをしたが， <script type="math/tex"> \rm{mod} 2 </script>になっている箇所があることにずっと気づかずに時間を溶かした．気をつけたい．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

bool can(bool f, int cur, int to) {
    if(f) {
        if(cur % 3 == 1 &amp;&amp; to % 3 != 1) return false;
        if(cur % 3 == 2 &amp;&amp; to % 3 == 0) return false;
        return true;
    } else {
        if(cur % 3 == 0 &amp;&amp; to % 3 != 0) return false;
        if(cur % 3 == 2 &amp;&amp; to % 3 == 1) return false;
        return true;
    }
}

int main() {
    string s;
    while(cin &gt;&gt; s) {
        if(s == "#") break;

        vector&lt;int&gt; v(s.size());
        rep(i, s.size()) v[i] = s[i] - '0';

        int ans = INF, res = 0;
        int left = v[0], right = 0, ord = 0;

        REP(i, 1, v.size()) {
            if(ord &amp; 1) {
                if(can(1, right, v[i])) {
                    left = v[i];
                    ord++;
                } else {
                    right = v[i];
                    res++;
                }
            } else {
                if(can(0, left, v[i])) {
                    right = v[i];
                    ord++;
                } else {
                    left = v[i];
                    res++;
                }
            }
        }

        ans = min(ans, res);

        res = 0;
        left = 0, right = v[0], ord = 1;
        REP(i, 1, v.size()) {
            if(ord &amp; 1) {
                if(can(1, right, v[i])) {
                    left = v[i];
                    ord++;
                } else {
                    right = v[i];
                    res++;
                }
            } else {
                if(can(0, left, v[i])) {
                    right = v[i];
                    ord++;
                } else {
                    left = v[i];
                    res++;
                }
            }
        }

        ans = min(ans, res);
        cout &lt;&lt; ans &lt;&lt; endl;
    }
    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ1316 The Sorcerer's Donut]]></title>
    <link href="http://ry0u.github.io/blog/2016/03/20/aoj1316-the-sorcerers-donut/"/>
    <updated>2016-03-20T22:29:14+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/03/20/aoj1316-the-sorcerers-donut</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-type="article" data-card-branding="0"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1316">The Sorcerer's Donut</a></h4><p>Your master went to the town for a day. You could have a relaxed day without hearing his scolding. But he ordered you to make donuts dough by the evening. Loving donuts so much, he can't live without eating tens of donuts everyday. What a chore for such a beautiful day.</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p>盤面が小さいので，ある方向に一周した文字列を列挙して <script type="math/tex"> 2 </script>回以上出て辞書順最小のものを出力した．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int w,h,x,y;
int sx,sy,gx,gy;
int dx[9] = { 1, 1, 1, 0, 0, 0,-1,-1,-1};
int dy[9] = {-1, 0, 1,-1, 0, 1,-1, 0, 1};

bool can(int y,int x) {
    if(0 &lt;= y &amp;&amp; y &lt; h &amp;&amp; 0 &lt;= x &amp;&amp; x &lt; w) return true;
    return false;
}

int main() {
    while(cin &gt;&gt; h &gt;&gt; w) {
        if(h == 0 &amp;&amp; w == 0) break;

        vector&lt;string&gt; s(h);
        rep(i, h) cin &gt;&gt; s[i];

        map&lt;string, int&gt; m;
        bool used[15][25];

        rep(i, h) {
            rep(j, w) {
                rep(k, 9) {
                    int y = i, x = j;
                    memset(used, 0, sizeof(used));
                    string t = "";
                    while(!used[y][x]) {
                        used[y][x] = true;
                        t += s[y][x];

                        y = (y + h + dy[k]) % h;
                        x = (x + w + dx[k]) % w;

                        if(t.size() &gt; 1) m[t]++;
                    }
                }
            }
        }

        string ans = "";
        map&lt;string, int&gt;::iterator ite;
        for(ite = m.begin(); ite != m.end(); ite++) {
            if(ite-&gt;second &lt; 2) continue;
            if(ite-&gt;first.size() &gt; ans.size()) {
                ans = ite-&gt;first;
            } else if(ite-&gt;first.size() == ans.size()) {
                bool flag = true;
                rep(i, ans.size()) {
                    if(ite-&gt;first[i] &lt;= ans[i]) continue;
                    flag = false;
                }

                if(flag) ans = ite-&gt;first;
            }
        }

        if(ans.size() == 0) cout &lt;&lt; 0 &lt;&lt; endl;
        else cout &lt;&lt; ans &lt;&lt; endl;
    }

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
</feed>
