<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: しゃくとり法 | ry0u_ydのblog]]></title>
  <link href="http://ry0u.github.io/blog/categories/siyakutorifa/atom.xml" rel="self"/>
  <link href="http://ry0u.github.io/"/>
  <updated>2016-06-07T00:25:58+09:00</updated>
  <id>http://ry0u.github.io/</id>
  <author>
    <name><![CDATA[ry0u_yd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Codeforces354-div2C Vasya and String]]></title>
    <link href="http://ry0u.github.io/blog/2016/05/26/codeforces354-div2c-vasya-and-string/"/>
    <updated>2016-05-26T09:38:50+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/05/26/codeforces354-div2c-vasya-and-string</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-branding="0" data-card-type="article"><h4><a href="http://codeforces.com/contest/676/problem/C">Problem - C - Codeforces</a></h4><p>High school student Vasya got a string of length n as a birthday present. This string consists of letters 'a' and '' only. Vasya denotes beauty of the string as the maximum length of a substring (consecutive subsequence) consisting of equal letters. Vasya can change no more than k characters of the original string.</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p>長さ<script type="math/tex"> n </script>の文字<script type="math/tex"> a, b </script>で構成された文字列が与えられる．<script type="math/tex"> k </script>回変更可能な時に，同じ文字で構成される部分文字列の最大長を答える．</p>

<p>文字 <script type="math/tex"> a </script>だけで構成される部分文字列を考える．区間<script type="math/tex"> [l, r]</script>の中に文字<script type="math/tex"> b </script>が <script type="math/tex"> k </script>個以下ならば，その区間では全て <script type="math/tex"> a </script>にすることができる．これをずらしながらやっていく．文字<script type="math/tex"> b </script>で構成される部分文字列も同様にやり，最大値を取った． <script type="math/tex"> O(n) </script>．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int main() {
    int n, k;
    cin &gt;&gt; n &gt;&gt; k;

    string s;
    cin &gt;&gt; s;

    int ans = 0;

    int l = 0, r = 0, cnt = 0;
    rep(i, n) {
        r = i;
        if(s[i] == 'b') cnt++;

        if(cnt &lt;= k) {
            ans = max(ans, r - l + 1);
        }

        while(cnt &gt; k) {
            if(s[l] == 'b') cnt--;
            l++;
        }
    }

    l = 0, r = 0, cnt = 0;
    rep(i, n) {
        r = i;
        if(s[i] == 'a') cnt++;

        if(cnt &lt;= k) {
            ans = max(ans, r - l + 1);
        }

        while(cnt &gt; k) {
            if(s[l] == 'a') cnt--;
            l++;
        }
    }

    cout &lt;&lt; ans &lt;&lt; endl;


    return 0;
}
</code></pre>

<p>本番では落ちた．区間 <script type="math/tex"> [l, r] </script>の中の<script type="math/tex"> b </script>が<script type="math/tex"> k </script>を超えた時，というのは今見ている文字が<script type="math/tex"> b </script>でその文字を <script type="math/tex"> a </script>に変えて， <script type="math/tex"> l </script>をずらす，ということなので <script type="math/tex"> r </script>は必ず今見ている場所 <script type="math/tex"> i </script>となる．ということがよく整理できていなかった．反省．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ0600 Baumkuchen]]></title>
    <link href="http://ry0u.github.io/blog/2016/03/10/aoj0600-baumkuchen/"/>
    <updated>2016-03-10T23:01:54+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/03/10/aoj0600-baumkuchen</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-type="article" data-card-branding="0"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0600">Baumkuchen | Aizu Online Judge</a></h4><p>Introduction to Programming Introduction to Algorithms and Data Structures Library of Data Structures Library of Graph Algorithms Library of Computational Geometry Library of Dynamic Programming Library of Number Theory</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p>円環を切って2つ繋げて表現する．<script type="math/tex"> sum[i]をi </script>未満の切り込み間の大きさの和として持っておく．区間<script type="math/tex"> (s, t] </script>を<script type="math/tex">3</script>ピースに分けた時の最小値，もう1つの切れ込みを入れる場所を <script type="math/tex"> id </script>と置くと，</p>

<ul>
<li><script type="math/tex"> (s, t] </script></li>
<li><script type="math/tex"> (t, id] </script></li>
<li><script type="math/tex"> (id, s+n]</script></li>
</ul>


<p>の<script type="math/tex"> 3 </script>ピースに分けることになる．区間<script type="math/tex"> (s, t] </script>を最小にしたいので，その区間の大きさ<script type="math/tex"> d </script>を初めて超える場所をlower_boundで取ってくる．後は取ってきた場所から<script type="math/tex"> s+n </script>までの和が<script type="math/tex"> d </script>よりも大きければ良い．もしをこれを満たすようなら，右端を伸ばしてみて，ダメだったら左端を縮める．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int main() {
    int n;
    cin &gt;&gt; n;

    vector&lt;ll&gt; v(n);
    rep(i, n) cin &gt;&gt; v[i];

    vector&lt;ll&gt; sum(2*n + 1);
    rep(i, n) {
        sum[i+1] += sum[i] + v[i];
    }

    rep(i, n) {
        sum[n+i+1] += sum[n + i] + v[i];
    }

    ll ans = 0;
    int s = 0, t = 0,cnt = 0;
    bool flag = true, first = true;

    while(true) {
        if(flag) t++;
        else s++;

        if(s + n &gt;= sum.size()) break;

        ll d = sum[t] - sum[s];
        int id = lower_bound(sum.begin(), sum.end(), sum[t]  + (sum[t] - sum[s])) - sum.begin();

        if(s + n &gt; id &amp;&amp; d &lt; sum[s+n] - sum[id]) {
            ans = max(ans, d);
            flag = true;
        } else {
            flag = false;
        }
    }

    cout &lt;&lt; ans &lt;&lt; endl;

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ0572 Card Game is Fun]]></title>
    <link href="http://ry0u.github.io/blog/2016/02/16/aoj0572-card-game-is-fun/"/>
    <updated>2016-02-16T23:08:35+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/02/16/aoj0572-card-game-is-fun</id>
    <content type="html"><![CDATA[<p>問題文<br/>
<a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0572">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0572</a></p>

<!-- more -->


<p>ブルーノは上から何枚か，下から何枚かを削る．つまり連続したカードが残る．もしブルーノのカードの山が決まった時に，アンナがそのカードの山を作れるかは，先頭から見ていきアンナの山にあるかどうかを見れば良い．<br/>
ブルーノの残すと考えてる暫定カードの先頭と末尾の<script type="math/tex">id</script>を持っておき，<br/>
そのカードの山をアンナが作れるのであれば，末尾を<script type="math/tex">+1もしそうでなければ先頭を+1する． </script><br/>
この<script type="math/tex">maxを取れば良いのでO(n ^2)</script>．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int main() {
    int n, m;
    cin &gt;&gt; n &gt;&gt; m;

    vector&lt;int&gt; a(n), b(m);
    rep(i, n) cin &gt;&gt; a[i];
    rep(i, m) cin &gt;&gt; b[i];

    set&lt; vector&lt;int&gt; &gt; st;

    int ans = 0,s = 0, t = 1;
    while(s != b.size()) {
        vector&lt;int&gt; v(t - s);
        REP(j, s, t) {
            v[j-s] = b[j];
        }

        bool flag = false;
        int id = 0;
        rep(j, n) {
            if(a[j] == v[id]) {
                id++;
                if(id == v.size()) {
                    flag = true;
                    break;
                }
            }
        }

        if(flag) {
            t++;
            ans = max(ans, (int)v.size());
        } else {
            s++;
            if(s == t) t++;
        }

    }

    cout &lt;&lt; ans &lt;&lt; endl;

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
</feed>
