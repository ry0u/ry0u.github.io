<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 数学 | ry0u_ydのblog]]></title>
  <link href="http://ry0u.github.io/blog/categories/shu-xue/atom.xml" rel="self"/>
  <link href="http://ry0u.github.io/"/>
  <updated>2016-06-01T00:20:50+09:00</updated>
  <id>http://ry0u.github.io/</id>
  <author>
    <name><![CDATA[ry0u_yd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AOJ1325 Ginkgo Numbers]]></title>
    <link href="http://ry0u.github.io/blog/2016/03/20/aoj1325-ginkgo-numbers/"/>
    <updated>2016-03-20T23:11:37+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/03/20/aoj1325-ginkgo-numbers</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-type="article" data-card-branding="0"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1325">Ginkgo Numbers</a></h4><p>We will define Ginkgo numbers and multiplication on Ginkgo numbers. A Ginkgo number is a pair where m and n are integers. For example, , and are Ginkgo numbers. A Ginkgo number is called a prime if m 2+ n 2 > 1 and it has exactly eight divisors.</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p>与えられている <script type="math/tex"> 2 </script>個目の性質だけを使った． <script type="math/tex"> m ^2 + n ^2 </script>を割り切れる数が <script type="math/tex"> x ^2 + y ^2 </script>という形で表せるか，という問題になり</p>

<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-type="article" data-card-branding="0"><h4><a href="http://mathtrain.jp/twosquare">フェルマーの二平方和定理 | 高校数学の美しい物語</a></h4><p>整数論の美しい定理であるフェルマーの二平方和定理を解説します。平方剰余などの議論を用いた証明。</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>


<p>この記事通りに，素因数の<script type="math/tex"> 4k + 3 </script>型の指数が全て偶数かどうかを見て判断する． <script type="math/tex"> 1 </script>と <script type="math/tex"> m ^2 + n ^2 </script>以外に存在するか，ということで合計して<script type="math/tex"> 3 </script>つ以上あれば<script type="math/tex"> C </script>となる．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

map&lt;ll,ll&gt; prime_factor(ll n) {
    map&lt;ll,ll&gt; res;
    for(ll i=2; i*i &lt;= n; i++) {
        while(n%i == 0) {
            res[i]++;
            n /= i;
        }
    }

    if(n != 1) res[n] = 1;
    return res;
}

int main() {
    int n;
    cin &gt;&gt; n;

    rep(i, n) {
        int m, n;
        cin &gt;&gt; m &gt;&gt; n;

        int s = m * m + n * n;
        int cnt = 0;

        REP(i, 1, s + 1) {
            if(s % i == 0) {
                map&lt;ll, ll&gt; ret = prime_factor(s / i);
                map&lt;ll, ll&gt;::iterator ite;
                bool flag = true;
                for(ite = ret.begin(); ite != ret.end(); ite++) {
                    if(ite-&gt;first  % 4 != 3) continue;
                    if(ite-&gt;second % 2 == 0) continue;
                    flag = false;
                }

                if(flag) {
                    cnt++;
                }
            }
        }

        if(cnt &gt;= 3) cout &lt;&lt; "C" &lt;&lt; endl;
        else cout &lt;&lt; "P" &lt;&lt; endl;
    }

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
</feed>
