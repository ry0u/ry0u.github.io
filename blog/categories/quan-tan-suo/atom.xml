<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 全探索 | ry0u_ydのblog]]></title>
  <link href="http://ry0u.github.io/blog/categories/quan-tan-suo/atom.xml" rel="self"/>
  <link href="http://ry0u.github.io/"/>
  <updated>2016-05-30T22:54:16+09:00</updated>
  <id>http://ry0u.github.io/</id>
  <author>
    <name><![CDATA[ry0u_yd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[AOJ1175 And Then. How Many Any There?]]></title>
    <link href="http://ry0u.github.io/blog/2016/05/21/and-then-how-many-any-there/"/>
    <updated>2016-05-21T01:35:44+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/05/21/and-then-how-many-any-there</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-branding="0" data-card-type="article"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1175&lang=jp">And Then. How Many Are There? | Aizu Online Judge</a></h4><p>Introduction to Programming Introduction to Algorithms and Data Structures Library of Data Structures Library of Graph Algorithms Library of Computational Geometry Library of Dynamic Programming Library of Number Theory</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p>別の円盤が上に無い状態の円盤は同じ色が偶数の場合は全部消し，奇数の場合は <script type="math/tex"> 1 </script>個消さないのを選ぶ，というやり方でやっていたが，消す順番によりそれより多く消せるパターンというのがありこれは間違いだった．<br/>
選ぶ順番によって消せる枚数が違ってくるので，各状態毎に <script type="math/tex"> (i, j) </script>を列挙して消せるかどうかを調べる． <script type="math/tex"> n </script>は最大で <script type="math/tex"> 4 * 6 = 24 </script>なので，状態数は <script type="math/tex"> 2 ^{24} </script>．intのbitでどの円盤を使ったかを管理した． <script type="math/tex"> O(2 ^n n ^2)  </script>．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;
#include &lt;cmath&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;

struct P {
    int x, y, r, c;

    P() : x(0), y(0), r(0), c(0) {}
    P(int x, int y, int r, int c) : x(x), y(y), r(r), c(c) {}
};

int n, ans;
vector&lt;P&gt; v;
set&lt;int&gt; memo;

void dfs(int S) {
    if(memo.find(S) != memo.end()) return;
    memo.insert(S);

    ans = max(ans, __builtin_popcount(S));
    if(ans == n) return;

    bool up[50];
    memset(up, 0, sizeof(up));
    for(int i = n-1; i &gt;= 0; i--) {
        if(S &amp; (1&lt;&lt;i)) continue;

        bool flag = true;
        for(int j = i-1; j &gt;= 0; j--) {
            if(S &amp; (1&lt;&lt;j)) continue;
            int dist = (v[j].x - v[i].x) * (v[j].x - v[i].x) + (v[j].y - v[i].y) * (v[j].y - v[i].y);
            int len = (v[i].r + v[j].r) * (v[i].r + v[j].r);

            if(dist &lt; len) {
                flag = false;
            }
        }

        if(!flag) up[i] = true;
    }

    set&lt;int&gt; st[5];
    for(int i = n-1; i &gt;= 0; i--) {
        if((S &amp; (1&lt;&lt;i)) || up[i]) continue;

        bool flag = true;

        for(int j = i-1; j &gt;= 0; j--) {
            if((S &amp; (1&lt;&lt;j)) || up[j]) continue;

            int dist = (v[j].x - v[i].x) * (v[j].x - v[i].x) + (v[j].y - v[i].y) * (v[j].y - v[i].y);
            int len = (v[i].r + v[j].r) * (v[i].r + v[j].r);

            if(dist &gt;= len &amp;&amp; v[i].c == v[j].c) {
                dfs(S + (1&lt;&lt;i) + (1&lt;&lt;j));
            }
        }
    }
}

int main() {
    while(cin &gt;&gt; n &amp;&amp; n) {

        v.clear();
        memo.clear();

        rep(i, n) {
            int x, y, r, c;
            cin &gt;&gt; x &gt;&gt; y &gt;&gt; r &gt;&gt; c;
            v.push_back(P(x, y, r, c));
        }

        vector&lt;bool&gt; used(n);
        rep(i, n) used[i] = false;

        ans = 0;
        int S = 0;
        dfs(S);

        cout &lt;&lt; ans &lt;&lt; endl;
    }

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Codeforces353-div2B Restoring Painting]]></title>
    <link href="http://ry0u.github.io/blog/2016/05/17/codeforces353-div2b-restoring-painting/"/>
    <updated>2016-05-17T17:43:57+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/05/17/codeforces353-div2b-restoring-painting</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-branding="0" data-card-type="article"><h4><a href="http://codeforces.com/contest/675/problem/B">Problem - B - Codeforces</a></h4><p>Vasya works as a watchman in the gallery. Unfortunately, one of the most expensive paintings was stolen while he was on duty. He doesn't want to be fired, so he has to quickly restore the painting. He remembers some facts about it.</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p>　<script type="math/tex"> 3 \times 3 </script>のマスで <script type="math/tex"> a, b, c, d </script>が与えられる． <script type="math/tex"> 2 \times 2 </script>の マスの和が全て等しくなるような ?を埋める <script type="math/tex"> 1 \sim n </script>数字の組はいくつあるか？<br/>
<img src="/images/Codeforces/353/b.png"></p>

<p>　?のマスをそれぞれ <script type="math/tex"> x, y, z, h, m </script> と置くと，それぞれ <script type="math/tex"> 4 </script>つの正方形の和は<br/>
<img src="/images/Codeforces/353/b2.png"></p>

<ol>
<li><script type="math/tex"> a + b + x + m </script></li>
<li><script type="math/tex"> a + c + y + m </script></li>
<li><script type="math/tex"> b + d + z + m </script></li>
<li><script type="math/tex"> c + d + h + m </script></li>
</ol>


<p>となり，全て <script type="math/tex"> m </script>が入っていて，<script type="math/tex"> m </script>の値は関係ないことがわかる．なので<script type="math/tex"> x, y, z, h </script>の組の<script type="math/tex"> n </script>倍でいい．<br/>
まず， <script type="math/tex"> x </script>の値を全探索する． <script type="math/tex"> x = i </script>と置くと， <script type="math/tex"> y, z, h </script>が</p>

<ul>
<li><script type="math/tex"> y = b + x - c </script></li>
<li><script type="math/tex"> z = a + x - d </script></li>
<li><script type="math/tex"> h = a + y - d </script></li>
</ul>


<p>と決まるので，その値が <script type="math/tex"> 1 \sim n </script>の間に収まっていれば，正しい組となる．その組の場合に <script type="math/tex"> n </script>を足していった(<script type="math/tex"> m </script>は何でも良い)．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int main() {
    ll n, a, b, c, d;
    cin &gt;&gt; n &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d;

    ll ans = 0;

    REP(i, 1, n + 1) {
        ll x = i;
        ll y = b + x - c;
        ll z = a + x - d;
        ll h = a + y - d;

        if(1 &lt;= y &amp;&amp; y &lt;= n &amp;&amp; 1 &lt;= z &amp;&amp; z &lt;= n &amp;&amp; 1 &lt;= h &amp;&amp; h &lt;= n) {
            ans += n;
        }
    }

    cout &lt;&lt; ans &lt;&lt; endl;

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ1500 ID]]></title>
    <link href="http://ry0u.github.io/blog/2016/04/19/aoj1500-id/"/>
    <updated>2016-04-19T23:41:11+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/04/19/aoj1500-id</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-branding="0" data-card-type="article"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1500">ID | Aizu Online Judge</a></h4><p>Introduction to Programming Introduction to Algorithms and Data Structures Library of Data Structures Library of Graph Algorithms Library of Computational Geometry Library of Dynamic Programming Library of Number Theory</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more -->


<p>&lsquo;?'に入る<script type="math/tex"> a_i </script>を全探索．&rsquo;?&lsquo;の数が小さいので十分間に合う．stringstream最初使ってて，やっぱり遅い&hellip;となった．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int f(int x, bool f) {
    int ret = 0;
    if(f) x *= 2;
    while(x) {
        ret += (x % 10);
        x /= 10;
    }
    return ret;
}

vector&lt;int&gt; id, a;
int n, m;
int cnt = 0;

void dfs(int i, int res) {
    if(i == id.size()) {
        if(res % 10 == 0) {
            cnt++;
        }
        return;
    }

    rep(j, m) {
        if((n - id[i]) % 2 == 0) {
            dfs(i + 1, res + f(a[j], true));
        } else {
            dfs(i + 1, res + f(a[j], false));
        }
    }
}

int main() {
    cin &gt;&gt; n;

    string s;
    cin &gt;&gt; s;

    cin &gt;&gt; m;

    a.resize(m);
    rep(i, m) cin &gt;&gt; a[i];
    sort(a.begin(), a.end());

    int sum = 0;
    rep(i, n) {
        if(s[i] =='*') {
            id.push_back(i);
        } else {
            if((n - i) % 2 == 0) {
                sum += f(s[i] - '0', true);
            } else {
                sum += f(s[i] - '0' , false);
            }
        }
    }

    cnt = 0;
    dfs(0, sum);

    cout &lt;&lt; cnt &lt;&lt; endl;

    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ1237 Shredding Company]]></title>
    <link href="http://ry0u.github.io/blog/2016/03/22/aoj1237-shredding-company/"/>
    <updated>2016-03-22T17:04:43+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/03/22/aoj1237-shredding-company</id>
    <content type="html"><![CDATA[<blockquote class="embedly-card" data-card-key="39deea93f79745829254c0652225a544" data-card-controls="0" data-card-type="article" data-card-branding="0"><h4><a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=1237">Shredding Company</a></h4><p>You have just been put in charge of developing a new shredder for the Shredding Company. Although a ``normal'' shredder would just shred sheets of paper into little pieces so that the contents would become unreadable, this new shredder needs to have the following unusual basic characteristics.</p></blockquote>


<script async src="//cdn.embedly.com/widgets/platform.js" charset="UTF-8"></script>




<!-- more-->


<p></p>

<p>作れる数を全列挙して， <script type="math/tex"> n </script>以下の最大の数を出力する．構成する数も出力するので，dfsの引数ににvectorを持たせてみた．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;cstring&gt;
#include &lt;algorithm&gt;
#include &lt;sstream&gt;
#include &lt;map&gt;
#include &lt;set&gt;

#define REP(i,k,n) for(int i=k;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)
#define INF 1&lt;&lt;30
#define pb push_back
#define mp make_pair

using namespace std;
typedef long long ll;
typedef pair&lt;int,int&gt; P;

int stoa(string s) {
    int ret = 0, t = 1;
    for(int i = s.size()-1; i &gt;= 0; i--) {
        ret += (s[i] - '0') * t;
        t *= 10;
    }
    return ret;
}

int n;
string s;
int vmin = INF, vmax = 0, ans = 0, cnt = 0;
vector&lt;int&gt; res;

void dfs(int i, int sum, vector&lt;int&gt; v) {
    if(i == s.size()) {
        vmin = min(vmin, sum);
        vmax = max(vmax, sum);

        if(sum &lt;= n) {
            if(ans &lt; sum) {
                ans = sum;
                cnt = 1;
                res.clear();
                rep(i, v.size()) res.push_back(v[i]);
            } else if(ans == sum) {
                cnt++;
            }
        }
        return;
    }

    REP(j, 1, s.size() + 1) {
        if(i + j &lt;= s.size() ) {
            vector&lt;int&gt; t(v.begin(), v.end());
            t.push_back(stoa(s.substr(i, j)));
            dfs(i + j, sum + stoa(s.substr(i, j)), t);
        } else return;
    }
}

int main() {
    while(cin &gt;&gt; n &gt;&gt; s) {
        if(n == 0 &amp;&amp; s == "0") break;

        vmin = INF, vmax = 0, ans = 0, cnt = 0;
        res.clear();

        vector&lt;int&gt; v;
        dfs(0, 0, v);

        if(vmin &gt; n) {
            cout &lt;&lt; "error" &lt;&lt; endl;
        } else if(cnt &gt;= 2) {
            cout &lt;&lt; "rejected" &lt;&lt; endl; 
        } else {
            cout &lt;&lt; ans;
            rep(i, res.size()) {
                cout &lt;&lt; " " &lt;&lt; res[i];
            }
            cout &lt;&lt; endl;
        }
    }
    return 0;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AOJ0546 Lining up the cards]]></title>
    <link href="http://ry0u.github.io/blog/2016/02/10/aoj0546-lining-up-the-cards/"/>
    <updated>2016-02-10T21:50:42+09:00</updated>
    <id>http://ry0u.github.io/blog/2016/02/10/aoj0546-lining-up-the-cards</id>
    <content type="html"><![CDATA[<p>問題文<br/>
<a href="http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0546">http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0546</a></p>

<!-- more-->


<p>最大<script type="math/tex"> Nが10</script>なので全探索してsetにぶっ込んで終了だと思ったけどTLEした．k番目より後ろが変更してもできる整数は一緒なので，k番目までの状態もsetにぶっ込んだらACした．</p>

<h1>Code</h1>

<pre><code class="cpp">#include &lt;iostream&gt;
#include &lt;sstream&gt;
#include &lt;string&gt;
#include &lt;vector&gt;
#include &lt;algorithm&gt;
#include &lt;set&gt;
#include &lt;map&gt;

#define REP(i,k,n) for(int i=0;i&lt;n;i++)
#define rep(i,n) for(int i=0;i&lt;n;i++)

using namespace std;

typedef long long ll;
typedef pair&lt;int, int&gt; P;

int func(vector&lt;int&gt; v, int k) {
    stringstream ss;
    rep(i, k) {
        ss &lt;&lt; v[i];
    }

    int ret;
    ss &gt;&gt; ret;

    return ret;
}

int main() {
    int n;
    while(cin &gt;&gt; n) {
        if(n == 0) break;

        int k;
        cin &gt;&gt; k;

        vector&lt;int&gt; v(n);
        rep(i, n) cin &gt;&gt; v[i];

        sort(v.begin(), v.end());

        set&lt;int&gt; ans;
        set&lt;vector&lt;int&gt; &gt; st;


        do {
            vector&lt;int&gt; ret(k);
            rep(i, k)  ret[i] = v[i];

            if(st.find(ret) == st.end()) {
                st.insert(ret);
                ans.insert(func(v, k));
            } else continue;
        }while(next_permutation(v.begin(), v.end()));

        cout &lt;&lt; ans.size() &lt;&lt; endl;
    }
    return 0;
}
</code></pre>
]]></content>
  </entry>
  
</feed>
