<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>String on ry0u_ydのblog</title>
    <link>http://ry0u.github.io/tags/string/index.xml</link>
    <description>Recent content in String on ry0u_ydのblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <atom:link href="http://ry0u.github.io/tags/string/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>SRM342 D1M ReverseResources</title>
      <link>http://ry0u.github.io/comp/2017-02-17-SRM342-D1M-ReverseResources/</link>
      <pubDate>Fri, 17 Feb 2017 22:40:34 +0900</pubDate>
      
      <guid>http://ry0u.github.io/comp/2017-02-17-SRM342-D1M-ReverseResources/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=7415&amp;amp;rd=10666&#34;&gt;https://community.topcoder.com/stat?c=problem_statement&amp;amp;pm=7415&amp;amp;rd=10666&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;文字列$str$を$resources$中の文字列から$1$つ選んで作りたい．$resources$の各文字列にある&amp;rdquo;%s&amp;rdquo;は，$resources$中の任意の文字列に置き換えすることができる．$str$を構成できる組み合わせは何通りか．&lt;/p&gt;

&lt;p&gt;$$
\begin{eqnarray}
    dp[i][j] &amp;amp;:=&amp;amp; [i, j)を構成できる組み合わせ数\\&lt;br /&gt;
    dp2[i][j][k][l] &amp;amp;:=&amp;amp; [i, j)をresources[j][l]まで見て構成できる組み合わせ数
\end{eqnarray}
$$&lt;/p&gt;

&lt;p&gt;区間$[l, r)$に各文字列を当てた場合を全て試す．&amp;rsquo;%s&amp;rsquo;が無い場合は，その区間と割り当てた文字列が完全に一致している場合は$1$，そうでない場合は$0$を返す．ある場合は，$[l, r)$区間のどこまでを$%s$で別の文字列に置き換えるか，$[l, i)$, $[i, r)$に分割する$i$を全て試す．$dp2[l][r][id][pos] += (a * b) % MOD;$にMODを入れないとoverflowする(落ちた)．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;bits/stdc++.h&amp;gt;

#define rep(i,n) for(int i=0;i&amp;lt;(int)(n);i++)
#define REP(i,k,n) for(int i=k;i&amp;lt;(int)(n);i++)
#define each(it,v) for(__typeof((v).begin()) it=(v).begin();it!=(v).end();it++)
#define INF 1&amp;lt;&amp;lt;30
#define mp make_pair
#define MOD 1000000007

#define fi first
#define se second

using namespace std;
typedef long long ll;
typedef pair&amp;lt;int, int&amp;gt; P;

int n;
string s;
vector&amp;lt;string&amp;gt; v;

int dp[55][55], dp2[35][35][55][55];

ll dfs(int l, int r);
ll dfs2(int l, int r, int id, int pos);

ll dfs(int l, int r) {
	if(dp[l][r] != -1) return dp[l][r];
	dp[l][r] = 0;
	rep(i, n) {
		dp[l][r] += dfs2(l, r, i, 0);
		dp[l][r] %= MOD;
	}
	return dp[l][r];
}

ll dfs2(int l, int r, int id, int pos) {
	if(dp2[l][r][id][pos] != -1) return dp2[l][r][id][pos];
	if(pos &amp;gt;= v[id].size()) return 0;

	if(v[id][pos] == &#39;?&#39;) {
		if(pos != v[id].size() - 1) {
			dp2[l][r][id][pos] = 0;
			for(int i = l + 1; i &amp;lt;= r; i++) {
				ll a = dfs(l, i);
				ll b = dfs2(i, r, id, pos + 1);
				dp2[l][r][id][pos] += (a * b) % MOD;
				dp2[l][r][id][pos] %= MOD;
			}
			return dp2[l][r][id][pos];
		} else {
			return dp2[l][r][id][pos] = dfs(l, r);
		}
	} else {
		if(s[l] != v[id][pos]) return 0;
		if(r - l == 1) {
			if(pos == v[id].size()-1) return 1;
			else return 0;
		}
		return dp2[l][r][id][pos] = dfs2(l + 1, r, id, pos + 1);
	}
}

class ReverseResources {
	public:
	int findDecompositions(string str, vector &amp;lt;string&amp;gt; resources) {
		s = str;
		n = resources.size();
		v.clear(); v.resize(n);
		rep(i, n) {
			string t = &amp;quot;&amp;quot;;
			rep(j, resources[i].size()) {
				if(j + 1 &amp;lt; resources[i].size() &amp;amp;&amp;amp; resources[i][j] == &#39;%&#39; &amp;amp;&amp;amp; resources[i][j+1] == &#39;s&#39;) {
					j++;
					t += &amp;quot;?&amp;quot;;
				} else {
					t += resources[i][j];
				}
			}
			v[i] = t;
		}

		memset(dp, -1, sizeof(dp));
		memset(dp2, -1, sizeof(dp2));
		return dfs(0, s.size());
	}
};
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;hugo&#34;&gt;hugo&lt;/h2&gt;

&lt;p&gt;エスケープで色々問題が起こっている．どうすればよいか&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;数式中の改行(&lt;a href=&#34;http://blog.tonytsai.name/blog/2017-01-05-test-mathjax/&#34;&gt;http://blog.tonytsai.name/blog/2017-01-05-test-mathjax/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aaa&lt;/code&gt;inline code中のbracket&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>